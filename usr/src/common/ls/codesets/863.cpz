#	Copyright (c) 1989 AT&T
#	  All Rights Reserved  
#
#	THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T
#	The copyright notice above does not evidence any   
#	actual or intended publication of such source code.
#
#ident "%W%"

# 1989/01 AT&T-UEL
# To compose PC 863 characters
# Derived from: AT&T terminal compose sequences
# Notes:	"compose"

map sparse (863.cpz) {

	define(compose "")	# compose character is cntrl T
	compose("" "")

	compose("\" " "\"")	# quotation mark
        compose(" \"" "\"")	# quotation mark
	compose("++" "#")	# number sign
	compose("' " "'")	# apostrophe
	compose(" '" "'")	# apostrophe
	compose("AA" "@")	# commercial at
	compose("((" "[")	# opening bracket
	compose("//" "\\")	# backslash
	compose("/<" "\\")	# backslash
	compose("</" "\\")	# backslash
	compose("))" "]")	# closing bracket
	compose("^ " "^")	# circumflex accent
	compose(" ^" "^")	# circumflex accent
	compose("> " "^")	# circumflex accent
	compose(" >" "^")	# circumflex accent
	compose("` " "`")	# grave accent
	compose(" `" "`")	# grave accent
	compose("(-" "{")	# opening brace
	compose("-(" "{")	# opening brace
	compose("/^" "|")	# vertical line
	compose("^/" "|")	# vertical line
	compose("LV" "|")	# vertical line
	compose("lv" "|")	# vertical line
	compose("VL" "|")	# vertical line
	compose("vl" "|")	# vertical line
	compose(")-" "}")	# closing brace
	compose("-)" "}")	# closing brace
	compose("~ " "~")	# tilde
	compose(" ~" "~")	# tilde
	compose("- " "~")	# tilde
	compose(" -" "~")	# tilde

	compose("c/" "õ")	# cent sign
	compose("/c" "õ")	# cent sign
	compose("C/" "õ")	# cent sign
	compose("/C" "õ")	# cent sign
	compose("c|" "õ")	# cent sign
	compose("|c" "õ")	# cent sign
	compose("C|" "õ")	# cent sign
	compose("|C" "õ")	# cent sign
	compose("l-" "ú")	# pound sign
	compose("-l" "ú")	# pound sign
	compose("L-" "ú")	# pound sign
	compose("-L" "ú")	# pound sign
	compose("l=" "ú")	# pound sign
	compose("=l" "ú")	# pound sign
	compose("L=" "ú")	# pound sign
	compose("=L" "ú")	# pound sign
	compose("xo" "ò")	# currency sign
	compose("ox" "ò")	# currency sign
	compose("XO" "ò")	# currency sign
	compose("OX" "ò")	# currency sign
	compose("xO" "ò")	# currency sign
	compose("Ox" "ò")	# currency sign
	compose("Xo" "ò")	# currency sign
	compose("oX" "ò")	# currency sign
	compose("x0" "ò")	# currency sign
	compose("0x" "ò")	# currency sign
	compose("X0" "ò")	# currency sign
	compose("0X" "ò")	# currency sign
	compose("!^" "†")	# broken vertical bar
	compose("^!" "†")	# broken vertical bar
	compose("||" "†")	# broken vertical bar
	compose("VB" "†")	# broken vertical bar
	compose("vb" "†")	# broken vertical bar
	compose("BV" "†")	# broken vertical bar
	compose("bv" "†")	# broken vertical bar
	compose("So" "è")	# section sign
	compose("oS" "è")	# section sign
	compose("SO" "è")	# section sign
	compose("OS" "è")	# section sign
	compose("sO" "è")	# section sign
	compose("Os" "è")	# section sign
	compose("so" "è")	# section sign
	compose("os" "è")	# section sign
	compose("S0" "è")	# section sign
	compose("0S" "è")	# section sign
	compose("s0" "è")	# section sign
	compose("0s" "è")	# section sign
	compose("!s" "è")	# section sign
	compose("!S" "è")	# section sign
	compose("S!" "è")	# section sign
	compose("s!" "è")	# section sign

	compose("\"\"" "ß")	# diaeresis
	compose("<<" "Æ")	# left angle quotation mark
	compose("-," "™")	# logical not
	compose(",-" "™")	# logical not

	compose("0^" "¯")	# Degree sign
	compose("^0" "¯")	# Degree sign
	compose("0*" "¯")	# Degree sign
	compose("*0" "¯")	# Degree sign
	compose("+-" "Ò")	# Plus minus
	compose("-+" "Ò")	# Plus minus
	compose("2^" "˝")	# Superscript 2
	compose("^2" "˝")	# Superscript 2
	compose("2S" "˝")	# Superscript 2
	compose("S2" "˝")	# Superscript 2
	compose("2s" "˝")	# Superscript 2
	compose("s2" "˝")	# Superscript 2
	compose("3^" "¶")	# Superscript 3
	compose("^3" "¶")	# Superscript 3
	compose("3S" "¶")	# Superscript 3
	compose("S3" "¶")	# Superscript 3
	compose("3s" "¶")	# Superscript 3
	compose("s3" "¶")	# Superscript 3
	compose("''" "°")	# acute accent
	compose("/u" "Ê")	# micron sign
	compose("u/" "Ê")	# micron sign
	compose("/U" "Ê")	# micron sign
	compose("U/" "Ê")	# micron sign
	compose("p!" "Ü")	# paragraph sign
	compose("!p" "Ü")	# paragraph sign
	compose("P!" "Ü")	# paragraph sign
	compose("!P" "Ü")	# paragraph sign
	compose(".^" "˙")	# middle dot
	compose("^." "˙")	# middle dot
	compose(".." "˙")	# middle dot

	compose(",," "•")	# cedilla
	compose(">>" "Ø")	# right angle quotation mark
	compose("14" "¨")	# one quarter
	compose("12" "´")	# one half
	compose("34" "≠")	# three quarters

	compose("A`" "é")	# A grave
	compose("`A" "é")	# A grave
	compose("A^" "Ñ")	# A circumflex
	compose("^A" "Ñ")	# A circumflex
	compose("A>" "Ñ")	# A circumflex
	compose(">A" "Ñ")	# A circumflex
	compose("C," "Ä")	# C cedilla
	compose(",C" "Ä")	# C cedilla

	compose("E`" "ë")	# E grave
	compose("`E" "ë")	# E grave
	compose("E'" "ê")	# E acute
	compose("'E" "ê")	# E acute
	compose("E^" "í")	# E circumflex
	compose("^E" "í")	# E circumflex
	compose("E>" "í")	# E circumflex
	compose(">E" "í")	# E circumflex
	compose("E\"" "î")	# E umlaut
	compose("\"E" "î")	# E umlaut
	compose("I^" "®")	# I circumflex
	compose("^I" "®")	# I circumflex
	compose(">I" "®")	# I circumflex
	compose("I>" "®")	# I circumflex
	compose("I\"" "ï")	# I umlaut
	compose("\"I" "ï")	# I umlaut

	compose("O^" "ô")	# O circumflex
	compose("^O" "ô")	# O circumflex
	compose("O>" "ô")	# O circumflex
	compose(">O" "ô")	# O circumflex

	compose("U`" "ù")	# U grave
	compose("`U" "ù")	# U grave
	compose("U\"" "ö")	# U umlaut
	compose("\"U" "ö")	# U umlaut
	compose("ss" "·")	# sharp s

	compose("a`" "Ö")	# a grave
	compose("`a" "Ö")	# a grave
	compose("a^" "É")	# a circumflex
	compose("^a" "É")	# a circumflex
	compose("a>" "É")	# a circumflex
	compose(">a" "É")	# a circumflex
	compose("c," "á")	# c cedilla
	compose(",c" "á")	# c cedilla

	compose("e`" "ä")	# e grave
	compose("`e" "ä")	# e grave
	compose("e'" "Ç")	# e acute
	compose("'e" "Ç")	# e acute
	compose("e^" "à")	# e circumflex
	compose("^e" "à")	# e circumflex
	compose("e>" "à")	# e circumflex
	compose(">e" "à")	# e circumflex
	compose("e\"" "â")	# e umlaut
	compose("\"e" "â")	# e umlaut
	compose("i^" "å")	# i circumflex
	compose("^i" "å")	# i circumflex
	compose("i>" "å")	# i circumflex
	compose(">i" "å")	# i circumflex
	compose("i\"" "ã")	# i umlaut
	compose("\"i" "ã")	# i umlaut

	compose("o'" "¢")	# o acute
	compose("'o" "¢")	# o acute
	compose("o^" "ì")	# o circumflex
	compose("^o" "ì")	# o circumflex
	compose("o>" "ì")	# o circumflex
	compose(">o" "ì")	# o circumflex
	compose("-:" "ˆ")	# divides
	compose(":-" "ˆ")	# divides
	compose("-;" "ˆ")	# divides
	compose(";-" "ˆ")	# divides

	compose("u`" "ó")	# u grave
	compose("`u" "ó")	# u grave
	compose("u'" "£")	# u acute
	compose("'u" "£")	# u acute
	compose("u^" "ñ")	# u circumflex
	compose("^u" "ñ")	# u circumflex
	compose("u>" "ñ")	# u circumflex
	compose(">u" "ñ")	# u circumflex
	compose("u\"" "Å")	# u umlaut
	compose("\"u" "Å")	# u umlaut
}
