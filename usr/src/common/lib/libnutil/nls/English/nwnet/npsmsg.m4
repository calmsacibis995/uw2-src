define(LCOM, `dnl')dnl
LCOM "@(#)cmd-nw:nls/English/npsmsg.m4	1.2"
LCOM "$Id: npsmsg.m4,v 1.68 1994/09/23 18:03:24 vtag Exp $"
LCOM
LCOM Copyright 1991, 1992 Unpublished Work of Novell, Inc.
LCOM All Rights Reserved.
LCOM
LCOM This work is an unpublished work and contains confidential,
LCOM proprietary and trade secret information of Novell, Inc. Access
LCOM to this work is restricted to (I) Novell employees who have a
LCOM need to know to perform tasks within the scope of their
LCOM assignments and (II) entities other than Novell who have
LCOM entered into appropriate agreements.
LCOM 
LCOM No part of this work may be used, practiced, performed,
LCOM copied, distributed, revised, modified, translated, abridged,
LCOM condensed, expanded, collected, compiled, linked, recast,
LCOM transformed or adapted without the prior written consent
LCOM of Novell.  Any use or exploitation of this work without
LCOM authorization could subject the perpetrator to criminal and
LCOM civil liability.
LCOM 
LCOM ****************************************************************
LCOM Message Text and Definition File:
LCOM ****************************************************************
LCOM
LCOM All messages should be placed into this file instead
LCOM of updating nwumsgs.msg and msgtable.h.   Then
LCOM the gencat program should be used to update
LCOM files nwumsgs.msg and msgtable.h.  This allows
LCOM all strings and defines to reside in one file (nwumsg.m4)
LCOM
LCOM Use the following commands to rebuild the files
LCOM via the m4 macro processor. (NOTE: users of OS_SUN4
LCOM need to use the system 5 version of m4).
LCOM
LCOM  % m4  -DCAT nvtmsg.m4 > nvtmsgs.msg
LCOM  % gencat nvtmsgs.cat nvtmsgs.msg
LCOM  % m4 nvtmsg.m4 > nvtmsgtable.h
LCOM
LCOM Get the M4 macros
include(`../nwumacro.m4')
LCOM
LCOM *************************************************************************
LCOM  The following is the copyright for nvtmsgtable.h file (unpublished)
LCOM *************************************************************************
LCOM
include(`../npub.m4')
LCOM
LCOM *************************************************************************
LCOM  The following is the copyright for the .cat file (published)
LCOM *************************************************************************
LCOM
include(`../pub.m4')
LCOM
LCOM *************************************************************************
LCOM
HLINE(`#if !defined(__npsmsgtable_h__)')
HLINE(`#define __npsmsgtable_h__')
HLINE(`')
LCOM
LCOM The following lines apply to the target files ONLY: 
LCOM
COM(` DEVELOPERS:  Do NOT add messages or constants to this file')
COM(`')
COM(`` You must go to file "nls/English/npsmsg.m4" and make additions there.'')
COM(`')
CLINE(`$ ')
CLINE(`$ The text in this file may be translated and the')
CLINE(`$ corresponding catalog file rebuilt for other languages.')
CLINE(`$ Rebuilding a catalog file is done with the following:')
CLINE(`$  % gencat nvtmsgs.cat nvtmsgs.msg')
CLINE(`$        where nvtmsgs.cat is the new catalog file.')
CLINE(`$ ')
LCOM
LCOM *****************************************************************************
LCOM  Message strings are added in the appropriate .m4 file, and the .m4 file
LCOM  gets included here. BE SURE to include the various .m4 files in the
LCOM  correct order. The files must be included in ascending set (domain) order.
LCOM *****************************************************************************
LCOM
LCOM *********************************************************
LCOM  revision string domain
LCOM *********************************************************
LCOM
SET(MSG_NPS_REV_SET,1)
REV_STR(`MSG_NPS_REV',`@(#)$Header: /SRCS/esmp/usr/src/nw/lib/libnutil/nls/English/nwnet/npsmsg.m4,v 1.68 1994/09/23 18:03:24 vtag Exp $')

LCOM
LCOM ------------------------------------------------------------------
CLINE(`$ ')
CLINE(`$	Messages for NPSD')
CLINE(`$ ')
SET(MSG_NPSD_SET,2)
define(`Module_Name', `NPSD')
define(`Module_Version', `2.0')
CLINE(`$ ')
CLINE(`$	In the following text the initial %s: is replaced by the name of')
CLINE(`$	the process being run, i.e. NPSD:')
CLINE(`$ ')
CLINE(`$	The following are messages displayed when the verbose option is set')
CLINE(`$ ')
INFORM_STR(`NPS_ROUTER', 9, `IPX Internal Network configured, setting Router Type to FULL\n')
INFORM_STR(`NPS_IDENTITY', 10, `Novell Protocol Suite Streams Architecture Daemon\n')
INFORM_STR(`NPS_CONFIGURATION', 11, `Reading configuration from \"%s\"\n')
INFORM_STR(`NPS_SAP_SPAWNED', 12, `Spawning the SAP daemon \"%s\" \n')
INFORM_STR(`NPS_DIAG_SPAWNED', 13, `Spawning the NWDIAG daemon \"%s\" \n')
INFORM_STR(`NPS_SPX', 14, `Including SPXII, Copyright Novell Inc.\n')
INFORM_STR(`NPS_NBIOS', 15, `Including NetBIOS, Copyright Novell Inc.\n')
INFORM_STR(`NPS_I_NET', 16, `IPX internal network: 0x%X \n')
INFORM_STR(`NPS_NO_I_NET', 17, `IPX internal network: Not configured\n')
INFORM_STR(`NPS_NVT', 18, `Enabling SPX Network Remote Login (NVT)\n')
INFORM_STR(`NPS_NMPS_SPAWNED', 19, `Spawning the Network Management Protocol Stack Daemon\"%s\" \n')
INFORM_STR_TAG(`NPS_NETM_EXEC_FAIL', 20, `Execution of the Network Management Daemon has failed\n')
INFORM_STR(`NPS_NO_SAPD', 21, `Router Type set to CLIENT, not starting SAP daemon\n')
LCOM
INFORM_STR(`NPS_LAN_INFO', 22, `LAN %d  %08X  %s  %s ')
INFORM_STR(`NPS_PPA_INFO', 23, `PPA %d')
LCOM	The following is used to print the interface name
INFORM_STR(`NPS_IFNAME_INFO', 24, ` %s')
INFORM_STR_TAG(`NPS_DIAG_EXEC_FAIL', 25, `Execution of the diagnostics daemon has failed\n')
CLINE(`$ ')
CLINE(`$	The following two lines are headings to columnar data')
CLINE(`$	and must be aligned and not exceed the column limits indicated')
CLINE(`$	by the dashed lines.  If you need to change the column lengths,')
CLINE(`$	the format is designated on the third line.  The last two column')
CLINE(`$	lengths are determined by the space filled length of the message')
CLINE(`$	text in messages 30-34')
CLINE(`$ ')
INFORM_STR(`NPS_BLANK_LINE', 26, `\n')
INFORM_STR(`NPS_HEADING_TEXT',   27, `  LAN     NETWORK      NODE       MUX ID       State         Stream\n')
INFORM_STR(`NPS_HEADING_DASHES', 28, `-------  --------  ------------  --------  -------------  ------------\n')
INFORM_STR(`NPS_HEADING_FORMAT', 29, `%7d  %8.8X  %2.2X%2.2X%2.2X%2.2X%2.2X%2.2X  %8.8X  ')
CLINE(`$ ')
CLINE(`$	The following are displayed in the State column (see HEADING_TEXT)')
CLINE(`$	when the verbose option is set')
CLINE(`$ ')
INFORM_STR(`NPS_UNBOUND', 30,  `   UNBOUND   ')
INFORM_STR(`NPS_LINKED',  31,  `   LINKED    ')
INFORM_STR(`NPS_NET_SET', 32,  `   NET SET   ')
INFORM_STR(`NPS_IDLE',    33,  `    IDLE     ')
INFORM_STR(`NPS_UNKNOWN', 34,  `   UNKNOWN   ')
CLINE(`$ ')
CLINE(`$	The following are displayed in the Stream Status column')
CLINE(`$	(see HEADING_TEXT) when the verbose option is set')
CLINE(`$ ')
INFORM_STR(`NPS_STR_ERROR', 40, `     ERROR\n')
INFORM_STR(`NPS_STR_OK',    41, `       OK\n')
CLINE(`$ ')
CLINE(`$	The following are error messages')
CLINE(`$ ')
INFORM_STR_TAG(`NPS_USAGE', 50, `Usage: npsd <-%s>\n')
INFORM_STR_TAG(`NPS_NO_SOCKETS', 58, `No socket router in IPX, cannot configure %s\n')
INFORM_STR_TAG(`NPS_NO_SHM_NBIOS', 60, `No NetBIOS shim specified\n')
INFORM_STR_TAG(`NPS_ADAPTER_FUNCTION', 61, `ConfigureLan: adapter type %s function failed\n')
INFORM_STR_TAG(`NPS_CFG_LAN_X_X', 62, `Configuration error on %s%d%s: ')
INFORM_STR_TAG(`NPS_CFG_X', 63, `Configuration error on %s: ')
INFORM_STR_TAG(`NPS_CFG_LAN_X_FRAME', 66, `Configuration error on %s%d%s, Invalid Ethernet frame type %s\n')
INFORM_STR_TAG(`NPS_CFG_LAN_X_TYPE', 67, `Configuration error on %s%d%s, Invalid adapter type \"%s\"\n')
INFORM_STR_TAG(`NPS_CFG_LAN_X_ADAPTER', 68, `Configuration error on %s%d%s, Invalid adapter \"%s\"\n')
INFORM_STR(`NPS_ALLOC_INFO', 69, `Could not allocate %d bytes for LAN information array\n')
INFORM_STR_TAG(`NPS_ALLOC_FILED', 70, `Could not allocate %d bytes for file descriptor buffer\n')
INFORM_STR_TAG(`NPS_NOLOG', 71, `Could not create log file for process.\n')
INFORM_STR_TAG(`NPS_BAD_CONFIG', 72, `The configuration file could not be initialized\n')
INFORM_STR(`NPS_ERROR_EXIT', 73, `Exiting\n')
INFORM_STR(`NPS_NVTD_NEEDS_SPX', 74, `Cannot configure SPX network remote login (NVT) unless SPX is configured\n')
INFORM_STR_TAG(`NPS_NVTD_FORK_ERR', 75, `The fork system call of SPX network remote login (nvts) daemon has failed\n')
INFORM_STR_TAG(`NPS_NVTD_ACTIVE_AIX', 76, `NVT ACTIVE; starting SPX network rlogin (NVT) server\n')
INFORM_STR_TAG(`NPS_NVTD_INACTIVE_AIX', 77, `NVT INACTIVE; killing SPX network rlogin (NVT) server\n')
INFORM_STR_TAG(`NPS_NVTD_EXEC_FAIL', 78, `Execution of SPX network remote login (NVT) daemon has failed\n')
INFORM_STR_TAG(`NPS_KILLING_NPSD', 87, `Killing NPSD\n')
INFORM_STR_TAG(`NPS_NEED_INTERNAL', 88, `The internal network must be configured\n')
INFORM_STR_TAG(`NPS_SAP_MAP', 89, `Unable to map %s from configuration: ')
INFORM_STR_TAG(`NPS_DUP_NET', 90, `LAN configuration is invalid, network number for lan %d and lan %d are duplicates\n')
CLINE(`$ ')
CLINE(`$	The following error messages are followed by a system error message')
CLINE(`$	(output of perror) on the same line.  These messages require a')
CLINE(`$	trailing space and do not have an ending newline (\n).')
CLINE(`$ ')
INFORM_STR_TAG(`NPS_DLPI_PUTMSG', 100, `EthernetDLPI (Info Req): putmsg: ')
INFORM_STR_TAG(`NPS_DLPI_GETMSG', 101, `EthernetDLPI (Info Req): getmsg: ')
INFORM_STR_TAG(`NPS_DLPI_INFO', 102, `EthernetDLPI (Info Req): ')
INFORM_STR_TAG(`NPS_DLPI_ATTACH', 103, `EthernetDLPI (Attach): ')
INFORM_STR_TAG(`NPS_DLPI_ATTACH_PUTMSG', 104, `EthernetDLPI (Attach): putmsg: ')
INFORM_STR_TAG(`NPS_DLPI_ATTACH_GETMSG', 105, `EthernetDLPI (Attach): getmsg: ')
INFORM_STR_TAG(`NPS_DLPI_DI_GETMSG', 106, `GetDlInfo (Info Req): getmsg: ')
INFORM_STR_TAG(`NPS_DLPI_BIND_PUTMSG', 107, `EthernetDLPI (Bind): putmsg: ')
INFORM_STR_TAG(`NPS_DLPI_BIND_GETMSG', 108, `EthernetDLPI (Bind): getmsg: ')
INFORM_STR_TAG(`NPS_DLPI_BIND', 109, `EthernetDLPI (Bind): ')
INFORM_STR_TAG(`NPS_DLPI_SUBBIND_PUTMSG', 110, `EthernetDLPI (Subsequent Bind): putmsg: ')
INFORM_STR_TAG(`NPS_DLPI_SUBBIND_GETMSG', 111, `EthernetDLPI (Subsequent Bind): getmsg: ')
INFORM_STR_TAG(`NPS_DLPI_SUBBIND', 112, `EthernetDLPI (Subsequent Bind): ')
INFORM_STR_TAG(`NPS_SAP_FAILED', 119, `Execution of the sap daemon has failed: ')
INFORM_STR_TAG(`NPS_OPEN_FAILED', 121, `Open of %s failed: ')
INFORM_STR_TAG(`NPS_LINK_FAILED', 122, `Unable to link %s to %s: ')
INFORM_STR_TAG(`NPS_IOCTL_TO_FAILED', 123, `The ioctl system call (%s) to %s failed to set value 0x%X: ')
INFORM_STR_TAG(`NPS_PUSH_TO_FAILED', 125, `Streams push of %s on %s has failed: ')
INFORM_STR_TAG(`NPS_IOCTL_FAIL', 129, `The ioctl system call (%s) to %s has failed: ')
INFORM_STR_TAG(`NPS_CLOSEXEC', 130, `Setting \"close-on-exec\" has failed for %s: ')
CLINE(`$ ')
CLINE(`$	The following are DLPI error messages.  These may trail the above')
CLINE(`$	messages as in the output of perror.')
CLINE(`$ ')
INFORM_STR(`NPS_DLPI_X',  150, `Unexpected DLPI response (Type 0x%02X)\n')
INFORM_STR(`NPS_DLPI_UNKNOWN', 151, `Unknown DLPI error 0x%02X\n')
CLINE(`$ ')
CLINE(`$	This first message is the basis for all the messages below.')
CLINE(`$	The messages below are included where the second %s is placed.')
CLINE(`$ ')
INFORM_STR_TAG(`NPS_DLPI_BEGIN', 160, `DLPI Error: %s\n')
CLINE(`$ ')
CLINE(`$	These messages are part of the above message, see comments above')
CLINE(`$ ')
INFORM_STR(`NPS_DLPI_ACCESS', 170, `Improper permissions for request')
INFORM_STR(`NPS_DLPI_BADADDR', 171, `DLSAP address in improper format or invalid')
INFORM_STR(`NPS_DLPI_BADCORR', 172, `Sequence number is not from outstanding DL_CONN_IND')
INFORM_STR(`NPS_DLPI_BADDATA', 173, `User data has exceeded the provider limit')
INFORM_STR(`NPS_DLPI_BADPPA', 174, `Specified PPA is invalid')
INFORM_STR(`NPS_DLPI_BADPRIM', 175, `Primitive received is not known by DLS provider')
INFORM_STR(`NPS_DLPI_BADQOSPARAM', 176, `QOS parameters contains invalid values')
INFORM_STR(`NPS_DLPI_BADQOSTYPE', 177, `QOS structure type is unknown or unsupported')
INFORM_STR(`NPS_DLPI_BADSAP', 178, `Bad LSAP selector, LLI compatibility')
INFORM_STR(`NPS_DLPI_BADTOKEN', 179, `Token is not associated with an active stream')
INFORM_STR(`NPS_DLPI_BOUND', 180, `Attempted second bind with \"dl_max_conind\" or \"dl_conn_mgmt\" is greater than zero on the same DLSAP or PPA')
INFORM_STR(`NPS_DLPI_INITFAILED', 181, `Physical link initialization has failed')
INFORM_STR(`NPS_DLPI_NOADDR', 182, `Provider could not allocate alternate address')
INFORM_STR(`NPS_DLPI_NOTINIT', 183, `Physical link is not initialized')
INFORM_STR(`NPS_DLPI_OUTSTATE', 184, `Primitive issued in an improper state, LLI compatibility')
INFORM_STR(`NPS_DLPI_SYSERR', 185, `DLPI: A system error has occurred')
INFORM_STR(`NPS_DLPI_UNSUPPORTED', 186, `Requested service not supplied by provider')
INFORM_STR(`NPS_DLPI_UNDELIVERABLE', 187, `Previous data unit could not be delivered')
INFORM_STR(`NPS_DLPI_NOTSUPPORTED', 188, `Primitive is known but not supported by DLS provider')
INFORM_STR(`NPS_DLPI_TOOMANY', 189, `Limit exceeded')
INFORM_STR(`NPS_DLPI_NOTENAB', 190, `Promiscuous mode not enabled')
INFORM_STR(`NPS_DLPI_BUSY', 191, `Other streams for a particular PPA in the post-attached state')
INFORM_STR(`NPS_DLPI_NOAUTO', 192, `Automatic handling of XID & TEST responses not supported')
INFORM_STR(`NPS_DLPI_NOXIDAUTO', 193, `Automatic handling of XID not supported')
INFORM_STR(`NPS_DLPI_NOTESTAUTO', 194, `Automatic handling of TEST not supported')
INFORM_STR(`NPS_DLPI_XIDAUTO', 195, `Automatic handling of XID response')
INFORM_STR(`NPS_DLPI_TESTAUTO', 196, `Automatic handling of TEST response')
INFORM_STR(`NPS_DLPI_PENDING', 197, `Pending outstanding connect indications')
CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for NWDIAGD')
CLINE(`$ ')
SET(MSG_DIAG_SET,3)
define(`Module_Name', `NWDIAGD')
define(`Module_Version', `2.0')
CLINE(`$ ')
CLINE(`$	Most messages start with %s')
CLINE(`$		%s is usually "nwdiagd: date time:"')
CLINE(`$	if the time can be determined, the format of messages is:')
CLINE(`$		sapd: 10:31:93 13:56:21: message')
CLINE(`$			(date & time printed in locale equivalent)')
CLINE(`$	If the time cannot be determined, the format is:')
CLINE(`$		sapd: [unknown time]: message')
CLINE(`$ ')
INFORM_STR(`DIAG_NO_TIME', 1, `[unknown time]')
CLINE(`$ ')
CLINE(`$	The following messages are followed by perror output and require')
CLINE(`$	a trailing space and no newline (\n).')
CLINE(`$ ')
INFORM_STR_TAG(`DIAG_FORK_FAIL', 11, `The fork system call has failed: ')
INFORM_STR_TAG(`DIAG_SESSION', 12, `Could not become session leader (setpgrp): ')
INFORM_STR_TAG(`DIAG_IOCTL_NET', 13, `The ioctl system call (%s) for net 0x%08X has failed: ')
INFORM_STR_TAG(`DIAG_IOCTL', 14, `The ioctl system call (%s) has failed: ')
INFORM_STR_TAG(`DIAG_T_RCV', 15, `Failure of t_rcvudata library call: ')
INFORM_STR_TAG(`DIAG_OPEN_FAIL', 16, `Open of %s failed: ')
INFORM_STR_TAG(`DIAG_TOPEN_FAIL', 17, `The t_open library call of %s failed: ')
INFORM_STR_TAG(`DIAG_TBIND_FAIL', 18, `The t_bind library call to %s failed: ')
INFORM_STR_TAG(`DIAG_TALLOC_FAIL', 19, `The t_alloc library call of %s failed: ')
INFORM_STR_TAG(`DIAG_SAPQ_FAIL', 20, `The t_snd library call of sap query failed: ')
INFORM_STR_TAG(`DIAG_SAPR_FAIL', 21, `The t_rcvudata library call on sap query failed: ')
INFORM_STR_TAG(`DIAG_FUNC_FAIL', 22, `%s failed: ')
INFORM_STR_TAG(`DIAG_CFG', 23, `Unable to map %s from configuration: ')
INFORM_STR_TAG(`DIAG_UDATA_FAIL', 24, `The t_rcvdis library call failed for %s: ')
INFORM_STR_TAG(`DIAG_LISTEN_FAIL', 25, `The t_listen library call on %s failed: ')
CLINE(`$ ')
CLINE(`$	The following are error messages')
CLINE(`$ ')
INFORM_STR_TAG(`DIAG_POLL', 30, `The poll system call failed.  errno: %d\n')
INFORM_STR_TAG(`DIAG_NORECV', 31, `Can not receive - t_look %d, t_errno = %d, errno %d\n')
INFORM_STR_TAG(`DIAG_BADPKT', 32, `Bad ipxDiagReq packet size %d\n')
INFORM_STR_TAG(`DIAG_ALLOC_LINFO', 34, `Could not allocate %d bytes for LAN information.\n')
INFORM_STR_TAG(`DIAG_ALLOC_POLL', 35, `Could not reallocate %d bytes for poll structure.\n')
INFORM_STR_TAG(`DIAG_NETSTBL', 36, `Unable to find net information in netsTbl.\n')
INFORM_STR_TAG(`DIAG_GETNET', 37, `GetNetEntry() failure\n')
INFORM_STR_TAG(`DIAG_SRVRSTBL', 38, `Unable to find server information in serversTbl.\n')
INFORM_STR_TAG(`DIAG_SERVERS', 40, `No servers table\n')
INFORM_STR_TAG(`DIAG_SERVERT', 41, `Error returned from InitServersTbl\n')
INFORM_STR_TAG(`DIAG_SIZE', 42, `Table size %d not a multiple of routeInfo_t\n')
INFORM_STR_TAG(`DIAG_COUNT', 43, `IpxSpxCountPkts: t_look() %d\n')
INFORM_STR_TAG(`DIAG_BCALL', 44, `IpxSpxCountPkts: Bad action %d\n')
INFORM_STR_TAG(`DIAG_MAP', 45, `Unable to map %s from configuration\n')
CLINE(`$ ')
CLINE(`$	The following are informational messages')
CLINE(`$ ')
INFORM_STR(`DIAG_START', 50, `NWDIAGD Started\n')
INFORM_STR(`DIAG_ERROR_EXIT', 51, `Exiting abnormally\n')
INFORM_STR(`DIAG_NORMAL_EXIT', 52, `NWDIAGD: Exiting normally\n')
INFORM_STR(`DIAG_KILLING_NPSD', 54, `NWDIAGD: Killing NPSD\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for SAPD')
CLINE(`$ ')
SET(MSG_SAPD_SET,4)
define(`Module_Name', `SAPD')
define(`Module_Version', `2.0')
CLINE(`$ ')
CLINE(`$	Most messages start with %s')
CLINE(`$		%s is usually "sapd: date time:"')
CLINE(`$	if the time can be determined, the format of messages is:')
CLINE(`$		sapd: 10:31:93 13:56:21: message')
CLINE(`$			(date & time printed in locale equivalent)')
CLINE(`$	If the time cannot be determined, the format is:')
CLINE(`$		sapd: [unknown time]: message')
CLINE(`$ ')
INFORM_STR(`SAP_NO_TIME', 1, `[unknown time]')
INFORM_STR_TAG(`SAP_ACTIVE', 2, `The Server Advertiser Daemon is already active\n')
CLINE(`$ ')
CLINE(`$	The following messages are followed by perror output and require')
CLINE(`$	a trailing space and no newline (\n).')
CLINE(`$ ')
INFORM_STR_TAG(`SAP_READ_FAIL', 10, `%s: ReadSapPacket has failed: ')
INFORM_STR_TAG(`SAP_PUTMSG_FAIL', 11, `%s: WriteSapPacket putmsg has failed: ')
INFORM_STR_TAG(`SAP_CHK_SRC', 12, `%s: IPX check sap source has failed: ')
INFORM_STR_TAG(`SAP_OPEN_FAIL', 13, `%s: Open of %s failed: ')
INFORM_STR_TAG(`SAP_IOCTL_INFO', 14, `%s: Ioctl to get the LAN information has failed: ')
INFORM_STR_TAG(`SAP_IOCTL_MAXLAN', 15, `%s: Ioctl to get max LANs has failed: ')
INFORM_STR_TAG(`SAP_NET_LIST', 16, `%s: The network listing for net 0x%08X has failed: ')
INFORM_STR_TAG(`SAP_NICE_FAIL', 17, `%s: Unable to set priority (nice) to %d: ')
INFORM_STR_TAG(`SAP_FORK_FAIL', 18, `%s: The fork system call has failed: ')
INFORM_STR_TAG(`SAP_SESSION', 21, `%s: Could not become session leader (setpgrp): ')
INFORM_STR_TAG(`SAP_MAP', 22, `%s: Unable to map %s from configuration: ')
INFORM_STR_TAG(`SAP_SET_RIPQ', 23, `%s: Ioctl to set RIP queue has failed: ')
INFORM_STR_TAG(`SAP_FAST_INIT', 24, `%s: Unable to map sap_fast_init from configuration, using default=active')
CLINE(`$ ')
CLINE(`$	The following are informational messages')
CLINE(`$ ')
INFORM_STR_TAG(`SAP_HANGUP', 30, `%s: Zero bytes was returned from getmsg(), interpreted as HANGUP\n')
INFORM_STR_TAG(`SAP_HANGUP_SIG', 31, `%s: Received hangup signal\n')
INFORM_STR_TAG(`SAP_TERM_SIG', 32, `%s: Received termination signal\n')
INFORM_STR_TAG(`SAP_PACKET_LEN', 33, `%s: IPX data remaining is %d bytes, wrong size for SAP operation %s\n')
INFORM_STR_TAG(`SAP_ALLOC_BUF', 34, `%s: Allocation of receive or send SAP buffer has failed\n')
INFORM_STR_TAG(`SAP_NO_NET', 35, `%s: No network structure for connected LAN %d\n')
INFORM_STR_TAG(`SAP_ADDR_CHG', 36, `%s: Network address change was detected for %s\n')
INFORM_STR_TAG(`SAP_ALLOC_LOCALNET', 37, `%s: Allocation of local network array has failed\n')
INFORM_STR_TAG(`SAP_DUP_ADDR', 38, `%s: Router configuration error detected\n%s is claiming this same internet address\n')
INFORM_STR_TAG(`SAP_ALLOC_SRVENT', 39, `%s: Allocation of ServerEntry has failed\n')
INFORM_STR_TAG(`SAP_ALLOC_INFO', 40, `%s: Allocation for InfoSource has failed\n')
INFORM_STR_TAG(`SAP_ALARM', 41, `%s: Lost alarm.  Seconds passed %d Interval %d Restart factor %d - restarting \n')
INFORM_STR_TAG(`SAP_RESOLVE', 42, `%s: Cannot resolve network number for connected LAN %d\n')
INFORM_STR_TAG(`SAP_MAX_BUF', 43, `%s: SAP maximum packet size has been changed to maxSDU %d for LAN %d\n')
INFORM_STR_TAG(`SAP_POLL_ERR', 44, `%s: Invalid return code from poll errno= %d\n')
INFORM_STR_TAG(`SAP_ALLOC_LIST', 45, `%s: Could not allocate space for net listing\n')
INFORM_STR_TAG(`SAP_PRIOR_VALUE', 47, `%s: SAPD priority %d exceeds maximum %d adjusting to %d\n')
INFORM_STR_TAG(`SAP_PRIOR_ADJUST', 48, `%s: Priority %d is less than minimum %d, adjusting to %d\n')
INFORM_STR_TAG(`SAP_SERVERS', 50, `%s: %d servers are in the table, %d server types\n')
INFORM_STR_TAG(`SAP_NOT_COUNTED', 51, `%s: %d server types not counted, table is too small\n')
INFORM_STR_TAG(`SAP_POOL_EMPTY', 54, `%s: Server pool is empty\n')
INFORM_STR_TAG(`SAP_POOL_BAD', 55, `%s: Bad server pool index of %d\n')
INFORM_STR_TAG(`SAP_READ_SIZE', 57, `%s: Read SAP packet has failed, packet is incorrect size of %d bytes, address %s\n')
INFORM_STR_TAG(`SAP_PACKET_LEN_BAD', 58, `%s: IPX data received, %d bytes, does not match ipx packet size %d\n')
INFORM_STR_TAG(`SAP_IN_GSR', 61, `%s: Received packet from non connected LAN, General Service Reply, address %s\n') 
INFORM_STR_TAG(`SAP_IN_GSQ', 62, `%s: Received packet from non connected LAN, General Service Query, address %s\n') 
INFORM_STR_TAG(`SAP_IN_NSQ', 63, `%s: Received packet from non connected LAN, Nearest Service Query, address %s\n') 
INFORM_STR_TAG(`SAP_IN_TYPE', 64, `%s: Received packet from non connected LAN, Type 0x%X, address %s\n') 
INFORM_STR_TAG(`SAP_OUT_GSR', 65, `%s: Destination packet to non connected LAN has been dropped, General Service Reply, address %s\n') 
INFORM_STR_TAG(`SAP_OUT_GSQ', 66, `%s: Destination packet to non connected LAN has been dropped, General Service Query, address %s\n') 
INFORM_STR_TAG(`SAP_OUT_NSQ', 67, `%s: Destination packet to non connected LAN has been dropped, Nearest Service Query, address %s\n') 
INFORM_STR_TAG(`SAP_OUT_NSR', 68, `%s: Destination packet to non connected LAN has been dropped, Nearest Service Response, address %s\n') 
INFORM_STR_TAG(`SAP_OUT_TYPE', 69, `%s: Destination packet to non connected LAN has been dropped, Type 0x%X, address %s\n') 
INFORM_STR_TAG(`SAP_UNXP_NSR', 70, `%s: Nearest server reply has been dropped, source %s\n')
INFORM_STR_TAG(`SAP_UNK', 71, `%s: Unknown packet type %d has been dropped, source %s\n')
INFORM_STR_TAG(`SAP_END_FILE', 72, `%s: Maximum messages of %d exceeded, SAP logging stopped\n        To restart remove SAP log file %s\n')
INFORM_STR_TAG(`SAP_START', 80, `%s: Started\n')
INFORM_STR_TAG(`SAP_ERROR_EXIT', 81, `%s: Exiting abnormally\n')
INFORM_STR_TAG(`SAP_NORMAL_EXIT', 82, `%s: Exiting normally\n')
INFORM_STR_TAG(`SAP_INITIALIZED', 83, `%s: Sap daemon is initialized\n')
INFORM_STR_TAG(`SAP_NOLOG', 84, `%s: Could not create log file for process\n')
INFORM_STR_TAG(`SAP_BAD_CONFIG', 85, `%s: The configuration file could not be initialized\n')
INFORM_STR_TAG(`SAP_SYSCALL_FAIL', 86, `%s: %s error: ')
INFORM_STR_TAG(`SAP_KILLING_NPSD', 87, `%s: Killing NPSD\n')
INFORM_STR_TAG(`SAP_SERVER_INFO', 90, `        Server type 0x%X, Local pid %d, Server name %s\n')
INFORM_STR_TAG(`SAP_ADD_LOCAL', 91, `%s: Add local server:\n')
INFORM_STR_TAG(`SAP_DELETLE_LOCAL', 92, `%s: Delete local server:\n')
INFORM_STR_TAG(`SAP_RIP_DELETLE_LOCAL', 93, `%s: Rip deleting local server:\n')
INFORM_STR_TAG(`SAP_AGE_LOCAL', 94, `%s: Ageout local server:\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for NVTD')
CLINE(`$ ')
SET(MSG_NVTD_SET,5)
define(`Module_Name', `NVTD')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`NVT_CFG_X', 1, `Configuration error on %s: ')
INFORM_STR_TAG(`NVT_MKDIR_FAIL', 2, `The mkdir system call of %s failed.\n')
INFORM_STR_TAG(`NVT_FSTAT_FAIL', 3, `The fstat system call failed.\n')
INFORM_STR_TAG(`NVT_FS_NODE_FAIL', 4, `Error making NVT file system node %s\n')
INFORM_STR_TAG(`NVT_CHOWN_FAIL', 5, `Error changing owner of %s\n')
INFORM_STR_TAG(`NVT_CHMOD_FAIL', 6, `Error changing mode of %s\n')
INFORM_STR_TAG(`NVT_OPEN_FAIL', 7, `Open of %s failed.\n')
INFORM_STR_TAG(`NVT_DUP_FAIL', 8, `Error reassigning stdin, stdout and stderr to %s.\n')
INFORM_STR_TAG(`NVT_STTY_FAIL', 9, `The stty system call failed.\n')
INFORM_STR_TAG(`NVT_MAKEUTX_FAIL', 10, `Error on makeutx system call for %s.\n')
INFORM_STR_TAG(`NVT_EXEC_FAIL', 11, `The execl system call to start ttymon failed.\n')

CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for IPXINFO')
CLINE(`$ ')
SET(MSG_IPXI_SET,6)
define(`Module_Name', `IPXINFO')
define(`Module_Version', `2.0')
LCOM
INFORM_STR(             `I_NEWLINE',   1, `\n')
INFORM_STR_TAG(   `I_IPX_OPEN_FAIL',   2, `Open of %s failed')
INFORM_STR_TAG(  `I_IPX_STATS_FAIL',   3, `The ioctl system call (IPX_STATS) to %s failed')
INFORM_STR(          `I_LAN_ACTIVE',   4, `%4d:%02d:%02d Time IPX driver active\n')
INFORM_STR(         `I_IPX_VERSION',   5, `IPX Socket Multiplexor (ISM) Version: %2d.%02d%c%c\n')
INFORM_STR(       `I_LIPMX_VERSION',   6, `IPX LAN Router Version: %2d.%02d%c%c\n')
INFORM_STR(           `I_LAN_STATS',   8, `IPX LAN Router Statistics:\n')
INFORM_STR(           `I_SOCKET_STATS',9, `IPX Socket Multiplexor (ISM) Statistics:\n')
INFORM_STR(               `I_IINFO',  10, `        Information about packets received from the LAN(s)\n')
INFORM_STR(           `I_DLPI_SIZE',  11, `%10u Packets with DLPI header too small, dropped\n')
INFORM_STR(           `I_DLPI_TYPE',  12, `%10u Packets not DLPI data type, dropped\n')
INFORM_STR(                `I_COMB',  13, `%10u Data IPX packets coalesced\n')
INFORM_STR(             `I_UP_PROP',  14, `%10u IPX/NetBIOS packets routed to other LAN(s)\n')
INFORM_STR(         `I_UP_NOT_PROP',  15, `%10u IPX/NetBIOS packets that have reached route limit, not routed\n')
INFORM_STR(            `I_RECD_LAN',  20, `%10u Total IPX data packets received from the LAN(s)\n')
INFORM_STR(               `I_SMALL',  21, `  %10u +Packets smaller than IPX header size, dropped\n')
INFORM_STR(                `I_ECHO',  30, `  %10u +Broadcast packets echoed back by DLPI driver, dropped\n')
INFORM_STR(                 `I_RIP',  31, `  %10u +IPX/RIP packets\n')
INFORM_STR(            `I_RIP_DROP',  32, `     %10u +IPX/RIP processed by router and dropped\n')
INFORM_STR(           `I_RIP_ROUTE',  33,`      %10u +IPX/RIP processed by router and routed to ISM\n')
INFORM_STR(                 `I_SAP',  40, `  %10u +IPX/SAP packets\n')
INFORM_STR(           `I_SAP_INVAL',  41, `     %10u +IPX/SAP packets invalid, dropped\n')
INFORM_STR(       `I_SAP_ROUTE_IPX',  42, `     %10u +IPX/SAP packets routed to ISM\n')
INFORM_STR(      `I_SAP_ROUTE_SAPS',  43, `     %10u +IPX/SAP packets no ISM, routed to sapd\n')
INFORM_STR(            `I_SAP_DROP',  44, `     %10u +IPX/SAP packets no ISM, no sapd, dropped\n')
INFORM_STR(         `I_DIAG_MY_NET',  50, `  %10u +IPX/DIAGNOSTIC packets\n')
INFORM_STR(        `I_DIAG_INT_NET',  51, `     %10u +IPX/DIAGNOSTIC packets addressed to my net, routed to ISM\n')
INFORM_STR(            `I_DIAG_NIC',  52, `     %10u +IPX/DIAGNOSTIC packets addressed to NIC\n')
INFORM_STR(            `I_DIAG_IPX',  53, `       %10u +IPX/DIAGNOSTIC packets routed to ISM\n')
INFORM_STR(         `I_DIAG_NO_IPX',  54, `       %10u +IPX/DIAGNOSTIC packets, no ISM, LAN router responded\n')
INFORM_STR(         `I_NIC_DROPPED',  55, `  %10u +Packets, addressed to NIC, not IPX/DIAGNOSTIC, dropped\n')
INFORM_STR(        `I_IN_BROADCAST',  60, `  %10u +Broadcast packets\n')
INFORM_STR(       `I_BROADCAST_INT',  61, `     %10u +Broadcast packets addressed to my net\n')
INFORM_STR(       `I_BROADCAST_NIC',  62, `     %10u +Broadcast packets addressed to NIC\n')
INFORM_STR(      `I_BROAD_DIAG_NIC',  63, `        %10u +IPX/DIAGNOSTIC broadcast packets addressed to NIC\n')
INFORM_STR(      `I_BROAD_DIAG_FWD',  64, `           %10u  IPX/DIAGNOSTIC packets forwarded to LAN(s)\n')
INFORM_STR(      `I_BROAD_DIAG_RTE',  65, `           %10u +IPX/DIAGNOSTIC packets routed to ISM\n')
INFORM_STR(     `I_BROAD_DIAG_RESP',  66, `           %10u +IPX/DIAGNOSTIC packets ISM not present, LAN router responded\n')
INFORM_STR(       `I_BROAD_ROUTE',  67, `        %10u +Broadcast Packets addressed to NIC, routed\n')
INFORM_STR(             `I_PKT_FWD',  70, `  %10u +Packets destination not my net, forwarded to next router\n')
INFORM_STR(           `I_PKT_ROUTE',  71, `  %10u +Packets routed to a node on a connected net\n')
INFORM_STR(       `I_PKT_ROUTE_INT',  72, `  %10u +Packets routed to the ISM\n')
INFORM_STR(               `I_OINFO',  80, `        Information about packets sent to the LAN router\n')
INFORM_STR(            `I_OUT_PROP',  81, `%10u  IPX/NetBIOS packets from an application routed to LAN(s)\n')
INFORM_STR(      `I_OUT_TOT_STREAM',  82, `%10u  Total IPX data packets received from the ISM\n')
INFORM_STR(           `I_OUT_TOTAL',  83, `%10u  Total IPX data packets sent to a LAN or ISM\n')
INFORM_STR(        `I_FILL_IN_DEST', 100, `  %10u  Packets destination net/node filled with my net/node\n')
INFORM_STR(     `I_OUT_SAME_SOCKET', 101, `  %10u +Packets from ISM destination/source sockets same, dropped\n')
INFORM_STR(             `I_BAD_LAN', 102, `  %10u +Packets router error, bad LAN, dropped\n')
INFORM_STR(         `I_OUT_MAX_SDU', 103, `  %10u +Packets with size greater than the LAN max SDU size, dropped\n')
INFORM_STR(              `I_NO_LAN', 104, `  %10u +Packets sent to a LAN that is no longer connected, dropped\n')
INFORM_STR(           `I_ROUTE_INT', 105, `  %10u +Packets routed to ISM\n')
INFORM_STR(            `I_OUT_SENT', 106, `  %10u +Packets routed to LAN\n')
INFORM_STR(          `I_OUT_QUEUED', 107, `  %10u +Packets queued to LAN\n')
INFORM_STR(           `I_OUT_PACED', 108, `  %10u +Packets queued to a LANs paced packet queue\n')
INFORM_STR(           `I_IOCTL_TOT', 120, `%10u  Ioctl packets total\n')
INFORM_STR(      `I_IOCTL_SET_LANS', 121, `  %10u +Set Configured LANs\n')
INFORM_STR(      `I_IOCTL_GET_LANS', 122, `  %10u +Get Configured LANs\n')
INFORM_STR(         `I_IOCTL_SAP_Q', 123, `  %10u +Set SAP Queue\n')
INFORM_STR(     `I_IOCTL_SET_LINFO', 124, `  %10u +Set LAN Info\n')
INFORM_STR(     `I_IOCTL_GET_LINFO', 125, `  %10u +Get LAN Info\n')
INFORM_STR(      `I_IOCTL_GET_NODE', 126, `  %10u +Get Node Address\n')
INFORM_STR(       `I_IOCTL_GET_NET', 127, `  %10u +Get Net Address\n')
INFORM_STR(     `I_IOCTL_GET_STATS', 128, `  %10u +Get Statistics\n')
INFORM_STR(          `I_IOCTL_LINK', 129, `  %10u +Link\n')
INFORM_STR(        `I_IOCTL_UNLINK', 130, `  %10u +Unink\n')
INFORM_STR(       `I_IOCTL_UNKNOWN', 131, `  %10u +Unknown type\n')
INFORM_STR(       `I_SOCKETS_BOUND', 140, `%10u  Sockets Bound\n')
INFORM_STR(        `I_NON_TLI_BIND', 141, `%10u  Non TLI Bind Socket Requests\n')
INFORM_STR(            `I_TLI_BIND', 142, `%10u  TLI Bind Socket Requests\n')
INFORM_STR(          `I_TLI_OPTMGT', 143, `%10u  TLI Option Management Requests\n')
INFORM_STR(         `I_TLI_UNKNOWN', 144, `%10u  TLI Unknown Requests\n')
INFORM_STR(      `I_TOTAL_IPX_PKTS', 150, `%10u  Total IPX data packets received from applications\n')
INFORM_STR(          `I_SWITCH_SUM', 151, `   %10u  Checksum generated\n')
INFORM_STR(     `I_SWITCH_SUM_FAIL', 152, `   %10u +Failure to generate checksum, packet dropped\n')
INFORM_STR(         `I_SWITCH_EVEN', 153, `   %10u  Packets padded to an even number of bytes\n')
INFORM_STR(   `I_SWITCH_EVEN_ALLOC', 154, `   %10u  Packets padded by allocating more space\n')
INFORM_STR(   `I_SWITCH_ALLOC_FAIL', 155, `   %10u +Could not allocate block for padding, packet dropped\n')
INFORM_STR(   `I_SWITCH_INVAL_SOCK', 156, `   %10u +BIND_SOCKET user sent packet with socket value of zero, dropped\n')
INFORM_STR(        `I_NON_TLI_PKTS', 160, `   %10u +Non TLI data packets\n')
INFORM_STR(        `I_OUT_BAD_SIZE', 161, `      %10u +Packets with length less than IPX header size, dropped\n')
INFORM_STR(       `I_OUT_TO_SWITCH', 162, `      %10u +Packets sent to LAN router\n')
INFORM_STR(        `I_TLI_OUT_PKTS', 164, `   %10u +TLI data packets\n')
INFORM_STR(       `I_TLI_BAD_STATE', 165, `      %10u +Bad TLI state, packet dropped\n')
INFORM_STR(        `I_TLI_BAD_SIZE', 166, `      %10u +Bad IPX address size, packet dropped\n')
INFORM_STR(         `I_TLI_BAD_OPT', 167, `      %10u +Bad TLI option size, packet dropped\n')
INFORM_STR(      `I_TLI_FAIL_ALLOC', 168, `      %10u +Allocation of IPX header failed, packet dropped\n')
INFORM_STR(       `I_TLI_TO_SWITCH', 169, `      %10u +Sent to the LAN router\n')
INFORM_STR(              `I_IPX_IN', 200, `%10u  Total packets received by the ISM\n')
INFORM_STR(            `I_TRIM_PKT', 201, `   %10u  Data size trimmed to match IPX data size\n')
INFORM_STR(         `I_IN_BAD_SIZE', 202, `   %10u +Packet length less than IPX length, dropped\n')
INFORM_STR(            `I_SUM_FAIL', 203, `   %10u +IPX checksum invalid, drop packet\n')
INFORM_STR(           `I_BUSY_SOCK', 204, `   %10u +Packets dropped because upper stream full\n')
INFORM_STR(      `I_SOCK_NOT_BOUND', 205, `   %10u +Packets dropped, destination socket not bound\n')
INFORM_STR(`I_IPX_ROUTED_TLI_ALLOC', 206, `   %10u +Allocation of TLI header failed, packet dropped\n')
INFORM_STR(        `I_DATA_TO_SOCK', 210, `   %10u +Total data packets routed by the ISM\n')
INFORM_STR(          `I_IPX_ROUTED', 211, `      %10u +Packets sent to non TLI socket\n')
INFORM_STR(        `I_IPX_SENT_TLI', 212, `      %10u +Packets sent to TLI socket\n')
INFORM_STR(        `I_TOTAL_IOCTLS', 220, `%10u  Total Ioctls processed\n')
INFORM_STR(       `I_IOC_SET_WATER', 221, `   %10u +Ioctl requests SET_WATER\n')
INFORM_STR(        `I_IOC_SET_BIND', 222, `   %10u +Ioctl requests SET_SOCKET or BIND_SOCKET\n')
INFORM_STR(          `I_IOC_UNBIND', 223, `   %10u +Ioctl requests UNBIND_SOCKET\n')
INFORM_STR(           `I_IOC_STATS', 224, `   %10u +Ioctl requests STATS\n')
INFORM_STR(         `I_IOC_UNKNOWN', 227, `   %10u +Ioctl requests Unknown, sent to LAN router\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for RIPINFO')
CLINE(`$ ')
SET(MSG_RIPI_SET,7)
define(`Module_Name', `RIPINFO')
define(`Module_Version', `2.0')
LCOM
INFORM_STR(             `R_NEWLINE',   1, `\n')
INFORM_STR_TAG(  `R_RIPX_OPEN_FAIL',   2, `Open of %s failed')
INFORM_STR_TAG( `R_RIPX_STATS_FAIL',   3, `The ioctl system call (RIPX_STATS) to %s failed')
INFORM_STR(          `R_RIP_ACTIVE',   4, `%4d:%02d:%02d Time RIP driver active\n')
INFORM_STR(        `R_RIPX_VERSION',   5, `RIPX Version: %2d.%02d%c%c\n')
INFORM_STR(       `R_RECEIVED_PKTS',  10, `%10u Total router packets received\n')
INFORM_STR(          `R_NO_LAN_KEY',  11, `  %10u +Could not generate LAN key, dropped\n')
INFORM_STR(        `R_RECV_BAD_LEN',  12, `  %10u +Invalid router structure size, dropped\n')
INFORM_STR(       `R_RECV_COALESCE',  13, `  %10u  Multiple message blocks coalesced\n')
INFORM_STR(       `R_COALESCE_FAIL',  14, `  %10u +Coalesce Failure, dropped\n')
INFORM_STR(          `R_ROUTER_REQ',  15, `  %10u +Router request packets\n')
INFORM_STR(         `R_ROUTER_RESP',  16, `  %10u +Router response packets\n')
INFORM_STR(         `R_UNKNOWN_REQ',  17, `  %10u +Unknown request packets\n')
INFORM_STR(            `R_TOT_SENT',  20, `%10u Total router packets sent\n')
INFORM_STR(     `R_SENT_ALLOC_FAIL',  21, `  %10u +Could not allocate buffer for packet, ignored\n')
INFORM_STR(       `R_SENT_BAD_DEST',  22, `  %10u +Could not match destination with a net, ignored\n')
INFORM_STR(       `R_SENT_REQ_PKTS',  23, `  %10u +Router request packets sent\n')
INFORM_STR(      `R_SENT_RESP_PKTS',  24, `  %10u +Router response packets sent\n')
INFORM_STR(   `R_SENT_LAN0_DROPPED',  30, `%10u Total requests to build packets for the local net, ignored\n')
INFORM_STR(    `R_SENT_LAN0_ROUTED',  31, `%10u Total router packets built for the local net, routed to IPX\n')
INFORM_STR(              `R_IOCTLS',  40, `%10u Ioctl requests processed\n')
INFORM_STR(      `R_IOC_INITIALIZE',  41, `  %10u +Ioctl RIPX_INITIALIZE\n')
INFORM_STR(   `R_IOC_GET_HASH_SIZE',  42, `  %10u +Ioctl RIPX_GET_HASH_SIZE\n')
INFORM_STR(  `R_IOC_GET_HASH_STATS',  43, `  %10u +Ioctl RIPX_GET_HASH_STATS\n')
INFORM_STR(       `R_IOC_DUMP_HASH',  44, `  %10u +Ioctl RIPX_DUMP_HASH_TABLE\n')
INFORM_STR(      `R_IOC_GET_ROUTER',  45, `  %10u +Ioctl RIPX_GET_ROUTER_TABLE\n')
INFORM_STR(    `R_IOC_GET_NET_INFO',  46, `  %10u +Ioctl RIPX_GET_NET_INFO\n')
INFORM_STR(     `R_IOC_CHK_SAP_SRC',  47, `  %10u +Ioctl RIPX_CHECK_SAP_SOURCE\n')
INFORM_STR(    `R_IOC_RESET_ROUTER',  48, `  %10u +Ioctl RIPX_RESET_ROUTER\n')
INFORM_STR(     `R_IOC_DOWN_ROUTER',  49, `  %10u +Ioctl RIPX_DOWN_ROUTER\n')
INFORM_STR(           `R_IOC_STATS',  50, `  %10u +Ioctl RIPX_STATS\n')
INFORM_STR(         `R_IOC_UNKNOWN',  51, `  %10u +Unknown ioctls\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for NWSAPINFO')
CLINE(`$ ')
SET(MSG_SAPI_SET,8)
define(`Module_Name', `NWSAPINFO')
define(`Module_Version', `2.0')
LCOM
INFORM_STR(             `A_NEWLINE',   1, `\n')
INFORM_STR_TAG( `A_INVALID_NUMERIC',   2, `Invalid numeric value \"%s\"\n')
INFORM_STR_TAG(     `A_BAD_NUMERIC',   3, `Numeric value %d > %d\n')
INFORM_STR_TAG(     `A_UNKNOWN_ARG',   4, `Unknown argument \"%s\"\n')
INFORM_STR(          `A_USAGE_HEAD',   5, `Usage: nwsapinfo [-adfFilLtxz] [-c num] [-C num] [-n num] [-s \"name\"] [-T num]\n')
INFORM_STR(             `A_USAGE_1',   6, `        -a option - same as -dfLstx options\n')
INFORM_STR(             `A_USAGE_2',   7, `        -d option - dump sap tables\n')
INFORM_STR(             `A_USAGE_3',   8, `        -f option - print 12 char name leading\n')
INFORM_STR(             `A_USAGE_4',   9, `        -F option - print full name trailing\n')
INFORM_STR(             `A_USAGE_5',  10, `        -i option - display sap information (default)\n')
INFORM_STR(             `A_USAGE_6',  11, `        -l option - display servers local to this machine\n')
INFORM_STR(             `A_USAGE_7',  12, `        -L option - display LAN information\n')
INFORM_STR(             `A_USAGE_8',  13, `        -t option - display types summary\n')
INFORM_STR(             `A_USAGE_9',  14, `        -x option - display IPX address of SAP\n')
INFORM_STR(            `A_USAGE_10',  15, `        -z option - do not print verbiage, just values\n')
INFORM_STR(            `A_USAGE_11',  16, `        -c num - display changed servers since revision stamp\n')
INFORM_STR(            `A_USAGE_12',  17, `        -C num - display changed servers since revision stamp\n')
INFORM_STR(            `A_USAGE_13',  18, `                 Wait for additional revisions\n')
INFORM_STR(            `A_USAGE_14',  19, `        -n num - display nearest server of type num\n')
INFORM_STR(            `A_USAGE_15',  20, `        -s \"name\" - display server information about name\n')
INFORM_STR(            `A_USAGE_16',  21, `                 May be followed by -T option\n')
INFORM_STR(            `A_USAGE_17',  22, `        -T num - Optional set server type\n')
INFORM_STR(            `A_USAGE_18',  23, `                 Can be used with one or more of -d, -t, -c, -C, -s options\n')
INFORM_STR(   `A_SAP_STATS_UNAVAIL',  30, `SAP Statistics not available\n')
INFORM_STR(     `A_TIME_SAP_ACTIVE',  31, `%3d:%02d:%02d Time SAP daemon active\n')
INFORM_STR(          `A_SAP_ACTIVE',  32, `%6d is the SAP PID, SAP is active\n')
INFORM_STR(        `A_SAP_INACTIVE',  33, `%6d is the SAP PID, SAP is NOT active\n')
INFORM_STR(       `A_KNOWN_SERVERS',  34, `%6d Total known servers\n')
INFORM_STR(     `A_UNUSED_SERV_ENT',  35, `%6d Total unused server entries\n')
INFORM_STR(          `A_KNOWN_LANS',  36, `%6x Total LANs known to SAP\n')
INFORM_STR(           `A_REV_STAMP',  37, `%6u Current revision stamp value\n')
INFORM_STR(      `A_TOTAL_SAP_RCVD',  38, `%6d Total SAP packets received\n')
INFORM_STR(            `A_GSQ_RCVD',  39, `    %6d GSQ packets received\n')
INFORM_STR(            `A_GSR_RCVD',  40, `    %6d GSR packets received\n')
INFORM_STR(            `A_NSQ_RCVD',  41, `    %6d NSQ packets received\n')
INFORM_STR(         `A_ADVERT_REQS',  42, `    %6d Local requests to advertise a server received\n')
INFORM_STR(         `A_NOTIFY_REQS',  43, `    %6d Local requests to notify of changes received\n')
INFORM_STR(      `A_GET_SHMEM_REQS',  44, `    %6d Local requests to get shared memory ID received\n')
INFORM_STR(        `A_NOT_NEIGHBOR',  45, `    %6d Packets received, source not on our LAN\n')
INFORM_STR(         `A_ECHO_OUTPUT',  46, `    %6d Packets received & dropped, echo of packet sent by SAP daemon\n')
INFORM_STR(            `A_BAD_SIZE',  47, `    %6d Packets received, bad size SAP packets\n')
INFORM_STR(      `A_BAD_SAP_SOURCE',  48, `    %6d Invalid SAP source detected\n')
INFORM_STR(      `A_TOTAL_OUT_SAPS',  49, `%6d Total SAP packets sent\n')
INFORM_STR(            `A_NSR_SENT',  50, `    %6d Nearest server replies sent\n')
INFORM_STR(            `A_GSR_SENT',  51, `    %6d General server replies sent\n')
INFORM_STR(            `A_GSQ_SENT',  52, `    %6d General server queries sent\n')
INFORM_STR(            `A_SAS_ACKS',  53, `    %6d ACK responses to advertise a local server sent\n')
INFORM_STR(           `A_SAS_NACKS',  54, `    %6d NAK responses to advertise a local server sent\n')
INFORM_STR(            `A_SNC_ACKS',  55, `    %6d ACK responses to notify local process of changes sent\n')
INFORM_STR(           `A_SNC_NACKS',  56, `    %6d NAK responses to notify local process of changes sent\n')
INFORM_STR(            `A_GSI_ACKS',  57, `    %6d ACK responses to get shared memory ID sent\n')
INFORM_STR(        `A_BAD_DEST_OUT',  58, `    %6d Packets where destination net not a local net\n')
INFORM_STR(    `A_SRV_ALLOC_FAILED',  59, `    %6d Server structure allocation request failures (shared memory)\n')
INFORM_STR(       `A_MALLOC_FAILED',  60, `    %6d Source structure allocation request failures (malloc)\n')
INFORM_STR(         `A_IN_RIP_SAPS',  61, `%6d Total network down packets received from RIP\n')
INFORM_STR(        `A_BAD_RIP_SAPS',  62, `    %6d Bad packets received from RIP\n')
INFORM_STR(     `A_RIP_SERVER_DOWN',  63, `    %6d Services set to DOWN from RIP packets received\n')
INFORM_STR(        `A_NOTIFY_PROCS',  64, `%6d Local processes requesting notification of changes\n')
INFORM_STR(        `A_NOTIFYS_SENT',  65, `    %6d Notifications of change sent to local processes\n')
INFORM_STR(         `A_SERVER_NAME',  70, `%-12s ')
INFORM_STR(         `A_SERVER_TYPE',  71, `Type: 0x%04X')
INFORM_STR(         `A_SERVER_HOPS',  72, ` Hops: %2d')
INFORM_STR(         `A_SERVER_ADDR',  73, ` Address: ')
INFORM_STR(            `A_HEX_ADDR',  74, ` 0x')
INFORM_STR(            `A_HEX_BYTE',  75, `%02X')
INFORM_STR(               `A_SPACE',  76, ` ')
INFORM_STR(              `A_STRING',  77, ` %s')
INFORM_STR(   `A_GET_ALL_SERV_FAIL',  80, `SAPGetAllServers failed')
INFORM_STR(     `A_NUM_LOC_SERVERS',  90, ` Total number of local servers %d\n')
INFORM_STR(         `A_NUM_SERVERS',  91, ` Total number of servers %d\n')
INFORM_STR(          `A_TYPE_COUNT', 100, ` Count %d\n')
INFORM_STR(     `A_SERVER_AND_TYPE', 101, ` Total number of servers %d, server types %d\n')
INFORM_STR(       `A_NOTIFY_FAILED', 110, `Cannot activate notification mechanism\n')
INFORM_STR(  `A_GET_CHANGED_FAILED', 111, `SAPGetChangedServers failed')
INFORM_STR(       `A_TOTAL_CHANGED', 112, ` Total number of changed servers from revision %u to revision %u is %d\n')
INFORM_STR(  `A_GET_NEAREST_FAILED', 113, `SAPGetNearestServers failed')
INFORM_STR(      `A_TYPE_NOT_FOUND', 114, `Type: 0x%04X not found\n')
INFORM_STR(  `A_GET_BY_NAME_FAILED', 115, `SAPGetServerByName failed')
INFORM_STR(         `A_IPX_ADDRESS', 116, ` IPX Address of SAP daemon\n')
INFORM_STR(             `A_NETWORK', 140, `0x%08X Network ID\n')
INFORM_STR(          `A_LAN_NUMBER', 141, `%6d LAN Index\n')
INFORM_STR(     `A_UPDATE_INTERVAL', 142, `%6d Periodic update interval in seconds\n')
INFORM_STR(          `A_AGE_FACTOR', 143, `%6d Periodic intervals before timeout a server\n')
INFORM_STR(          `A_PACKET_GAP', 144, `%6d Minimum time in milliseconds between packets\n')
INFORM_STR(         `A_PACKET_SIZE', 145, `%6d Maximum SAP packet size\n')
INFORM_STR(        `A_PACKETS_SENT', 146, `%6d Packets sent\n')
INFORM_STR(        `A_PACKETS_RCVD', 147, `%6d Packets received\n')
INFORM_STR(         `A_BAD_PACKETS', 148, `%6d Bad packets received\n')
INFORM_STR( `A_GET_LAN_DATA_FAILED', 150, `SAPGetLanData returned %d\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for SPXINFO')
CLINE(`$ ')
SET(MSG_SPXI_SET,9)
define(`Module_Name', `SPXINFO')
define(`Module_Version', `2.0')
LCOM
INFORM_STR(               `S_NEWLINE',   1, `\n')
INFORM_STR_TAG(     `S_SPX_OPEN_FAIL',   2, `Open of %s failed')
INFORM_STR_TAG(    `S_SPX_STATS_FAIL',   3, `The ioctl system call (SPX_GET_STATS) to %s failed')
INFORM_STR_TAG(`S_SPX_CON_STATS_FAIL',   4, `The ioctl system call (SPX_GET_CON_STATS) to %s failed')
INFORM_STR(           `S_SPX_GENERAL',   5, `SPXII General Statistics:\n')
INFORM_STR(           `S_SPX_VERSION',   6, ` SPXII Version: %2d.%02d%c%c\n')
INFORM_STR(           `S_TIME_ACTIVE',  10, `%4d:%02d:%02d Time SPX driver active\n')
INFORM_STR(             `S_MAX_CONNS',  11, `      %6u Maximum configured SPX connections\n')
INFORM_STR(         `S_CURRENT_CONNS',  12, `      %6u Current SPX connections\n')
INFORM_STR(           `S_SIMUL_CONNS',  13, `      %6u Maximum simultaneous SPX connections\n')
INFORM_STR(            `S_ALLOC_FAIL',  14, `      %6u Stream message allocation failures\n')
INFORM_STR(             `S_OPEN_FAIL',  15, `      %6u Opens of SPX failed\n')
INFORM_STR(                `S_IOCTLS',  16, `      %6u Ioctls received from applications\n')
INFORM_STR(             `S_CONN_REQS',  20, `          %6u Connect requests received from applications\n')
INFORM_STR(            `S_FAIL_CONNS',  21, `              %6u Connect requests from applications failed\n')
INFORM_STR(               `S_LISTENS',  22, `          %6u Listens posted by applications\n')
INFORM_STR(          `S_LISTENS_FAIL',  23, `              %6u Listens posted by applications failed\n')
INFORM_STR(            `S_SEND_COUNT',  24, `  %10u Stream messages sent to SPX from applications\n')
INFORM_STR(         `S_UNKNOWN_COUNT',  25, `          %6u Unknown messages sent to SPX from applications\n')
INFORM_STR(             `S_BAD_SENDS',  26, `          %6u Bad messages sent to SPX from applications\n')
INFORM_STR(             `S_IPX_SENDS',  27, `      %10u SPX data packets sent to IPX\n')
INFORM_STR(          `S_TIME_RETRANS',  28, `              %6u SPX packets retransmitted due to timeouts\n')
INFORM_STR(           `S_NAK_RETRANS',  29, `              %6u SPX packets retransmitted due to NAKs received\n')
INFORM_STR(              `S_IPX_RECV',  40, `  %10u Packets received from IPX\n')
INFORM_STR(          `S_BAD_IPX_RECV',  41, `          %6u Bad SPX packets received from IPX\n')
INFORM_STR(              `S_BAD_DATA',  42, `          %6u Bad SPX data packets received from IPX\n')
INFORM_STR(              `S_DUP_DATA',  43, `          %6u Duplicate SPX data packets received\n')
INFORM_STR(               `S_SENT_UP',  44, `      %10u Packets received that were sent up to applications\n')
INFORM_STR(             `S_IPX_CONNS',  45, `          %6u Connect request packets received from IPX\n')
INFORM_STR(            `S_ABORT_CONN',  46, `              %6u Connections aborted\n')
INFORM_STR(           `S_RETRY_ABORT',  47, `              %6u Connections aborted due to max retries exceeded\n')
INFORM_STR(            `S_NO_LISTENS',  48, `              %6u Connect request received from IPX with no listeners\n')
INFORM_STR(         `S_CONN_INACTIVE',  60, `SPX Connection for minor # %d is inactive\n')
INFORM_STR(            `S_CONN_STATS',  61, `SPX Connection Statistics for minor # %d:\n')
INFORM_STR(           `S_CONN_ACTIVE',  62, `%4d:%02d:%02d Time SPX connection active\n')
INFORM_STR(             `S_CONN_ADDR',  70, `         Address of this endpoint:\n')
INFORM_STR(              `S_NET_ADDR',  71, `             0x%02X%02X%02X%02X      NET\n')
INFORM_STR(             `S_NODE_ADDR',  72, `             0x%02X%02X%02X%02X%02X%02X  NODE\n')
INFORM_STR(           `S_SOCKET_ADDR',  73, `             0x%02X%02X          SOCKET\n')
INFORM_STR(           `S_CONN_NUMBER',  74, `             %-5d           SPX Connection Number\n')
INFORM_STR(            `S_OTHER_ADDR',  75, `         Address of other Endpoint:\n')
INFORM_STR(            `S_CONN_STATE',  80, `      %6u TLI state of SPX connection\n')
INFORM_STR(           `S_MAX_RETRIES',  81, `      %6u Maximum retries before disconnecting\n')
INFORM_STR(           `S_MIN_TIMEOUT',  82, `      %6u Milliseconds minimum between retries\n')
INFORM_STR(             `S_DATA_XFER',  90, `             Connection is in a DATA TRANSFER State\n')
INFORM_STR(             `S_SPXII_END',  91, `             Connected with a SPXII endpoint\n')
INFORM_STR(               `S_SPX_END',  92, `             Connected with a SPX endpoint\n')
INFORM_STR(           `S_UNKNOWN_END',  93, `             Connected with a UNKNOWN endpoint\n')
INFORM_STR(            `S_USE_CHKSUM',  94, `             Connection is using IPX checksums\n')
INFORM_STR(             `S_NO_CHKSUM',  95, `             Connection is NOT using IPX CHECKSUMS\n')
INFORM_STR(          `S_RCV_WIN_SIZE', 100, `                 %2u Current receive window size\n')
INFORM_STR(         `S_TRAN_WIN_SIZE', 101, `                 %2u Current transmit window size\n')
INFORM_STR(         `S_TRAN_PKT_SIZE', 102, `             %6u Current transmit packet size\n')
INFORM_STR(          `S_RCV_PKT_SIZE', 103, `             %6u Current receive packet size\n')
INFORM_STR(            `S_ROUND_TRIP', 104, `         %10u Milliseconds was last round trip time\n')
INFORM_STR(            `S_WIN_CLOSED', 105, `         %10u Times transmit window was closed\n')
INFORM_STR(            `S_FLOW_CNTL',  106, `         %10u Times SPX could not transmit data due to flow control\n')
INFORM_STR(            `S_APP_TO_SPX', 110, `  %10u Messages sent to SPX from application\n')
INFORM_STR(          `S_UNK_FROM_APP', 111, `          %6u Unknown messages sent to SPX from application\n')
INFORM_STR(          `S_BAD_FROM_APP', 112, `          %6u Bad messages sent to SPX from application\n')
INFORM_STR(           `S_SENT_TO_IPX', 113, `  %10u Data packets sent to IPX from SPX\n')
INFORM_STR(           `S_IPX_RESENDS', 114, `          %6u Data packets re-sent to IPX due to timeout\n')
INFORM_STR(        `S_IPX_NAK_RESEND', 115, `          %6u Data packets re-sent to IPX due to NAK received\n')
INFORM_STR(              `S_IPX_ACKS', 116, `  %10u ACK packets sent to IPX\n')
INFORM_STR(             `S_IPX_NACKS', 117, `      %6u NAK packets sent to IPX\n')
INFORM_STR(             `S_IPX_WATCH', 118, `      %6u Watchdog packets sent to IPX\n')
INFORM_STR(        `S_CON_RCV_PACKET', 130, `  %10u SPX packets received from IPX\n')
INFORM_STR(    `S_CON_RCV_BAD_PACKET', 131, `          %6u Bad SPX packets received from IPX\n')
INFORM_STR(      `S_CON_RCV_BAD_DATA', 132, `          %6u Bad SPX DATA packets received from IPX\n')
INFORM_STR(           `S_CON_RCV_DUP', 133, `          %6u Duplicate SPX packets received\n')
INFORM_STR(        `S_CON_RCV_OUTSEQ', 134, `          %6u Out of sequence packets received\n')
INFORM_STR(        `S_CON_RCV_SENTUP', 135, `      %10u SPX packets sent up to application\n')
INFORM_STR(        `S_CON_RCV_QUEUED', 136, `              %6u Packets queued due to flow control upstream\n')
INFORM_STR(           `S_CON_RCV_ACK', 137, `      %10u SPX ACKs received from IPX\n')
INFORM_STR(          `S_CON_RCV_NACK', 138, `      %10u SPX NAKs received from IPX\n')
INFORM_STR(         `S_CON_RCV_WATCH', 139, `          %6u Watchdog packets received from IPX\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for NWDISCOVER')
CLINE(`$ ')
SET(MSG_NWD_SET,10)
define(`Module_Name', `NWDISCOVER')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`NWD_PRIV',`1',`Must be privileged\n')
INFORM_STR_TAG(`NWD_RETRY',`2',`Retry count must be >= 1\n')
INFORM_STR_TAG(`NWD_TIMEOUT',`3',`Timeout value must be >= 1\n')
INFORM_STR_TAG(`NWD_AUTOD',`4',`ipx_auto_discovery is inactive, configuration not updated\n')
INFORM_STR_TAG(`NWD_CFG_X', 5, `Configuration error on %s: ')
INFORM_STR_TAG(`NWD_FRAME',`6',`Illegal frame type specified for -f option\n')
INFORM_STR_TAG(`NWD_FRAME_CHOOSE',`7',`Choose one of: ETHERNET_802.2, ETHERNET_II, ETHERNET_SNAP or ETHERNET_802.3\n')
INFORM_STR(`NWD_USAGE',`10',`Usage: nwdiscover < options >\n')
INFORM_STR(`NWD_USAGEc',`11',`        -c               - Concise printing mode\n')
INFORM_STR(`NWD_USAGEa',`12',`        -a               - Check all frame types and device types\n')
INFORM_STR(`NWD_USAGEd',`13',`        -d <device>      - Check for frame types only on this device\n')
INFORM_STR(`NWD_USAGED',`14',`        -D               - Turn on debug printing\n')
INFORM_STR(`NWD_USAGEb',`15',`        -b               - Turn on output Data Link debug printing\n')
INFORM_STR(`NWD_USAGEB',`16',`        -B               - Turn on input Data Link debug printing\n')
INFORM_STR(`NWD_USAGEP',`17',`        -P               - Turn on output packet debug printing\n')
INFORM_STR(`NWD_USAGEp',`18',`        -p               - Turn on input packet debug printing\n')
INFORM_STR(`NWD_USAGEe',`19',`        -e <frame_type>  - Exclude checking for this frametype\n')
INFORM_STR(`NWD_USAGEf',`20',`        -f <frame_type>  - Check for this frametype only\n')
INFORM_STR(`NWD_USAGEr',`21',`        -r <retry_count> - Number of times to retry frame type check\n')
INFORM_STR(`NWD_USAGEt',`22',`        -t <timeout>     - Time in seconds between retries\n')
INFORM_STR(`NWD_USAGEv',`23',`        -v               - Verbose printing mode\n')
INFORM_STR(`NWD_USAGEu',`24',`        -u               - Update NetWare configuration file\n')
INFORM_STR_TAG(`NWD_INT_NET',`25',`Internal net configured, must set -au options to update configuration\n')
INFORM_STR_TAG(`NWD_FRAME1',`26',`Illegal frame type in configuration for LAN 1\n')
INFORM_STR_TAG(`NWD_INVENT',`27',`lan_1: No networks found, inventing network number 0x%X, for frame type %s, network adapter %s\n')
INFORM_STR_TAG(`NWD_GOT_NET',`29',`lan_%d: %s device %s found network address %.8x\n')
INFORM_STR_TAG(`NWD_DUP_NET',`30',`lan_%d: Duplicate network %.8x on device %s with frame type %s ignored.\n\n')
INFORM_STR(`NWD_UPD_CFG',`31',`Updating configuration file:\n        Lan %d, Device %s, Network %.8x, Frame type %s\n')
INFORM_STR(`NWD_TRY',`32',`Trying %s device %s...\n')
INFORM_STR_TAG(`NWD_BIND_RESP',`33',`Incorrect response from bindSap\n')
INFORM_STR_TAG(`NWD_SUBBIND_RESP',`34',`Incorrect response from bindSap subsBind\n')
INFORM_STR_TAG(`NWD_DLPI_RESP',`35',`Incorrect response to DLPI information request\n')
INFORM_STR_TAG(`NWD_TMP_FILE',`40',`Could not open tmp file /tmp/frame.dev: ')
INFORM_STR_TAG(`NWD_NO_DEV',`41',`Scanf for network device failed: ')
INFORM_STR_TAG(`NWD_OPEN',`42',`Open of %s failed: ')
INFORM_STR_TAG(`NWD_RIP_FAIL',`43',`RIP putmsg failed:')
INFORM_STR_TAG(`NWD_BIND_REQ',`44',`bindSap putmsg (request) failed: ')
INFORM_STR_TAG(`NWD_BIND_ACK',`45',`bindSap getmsg (bindack) failed: ')
INFORM_STR_TAG(`NWD_SUBBIND_REQ',`46',`bindSap subsBind putmsg (request) failed: ')
INFORM_STR_TAG(`NWD_SUBBIND_ACK',`47',`bindSap getmsg (subsBindack) failed: ')
INFORM_STR_TAG(`NWD_GNS_FAIL',`49',`GNS putmsg failed: ')
INFORM_STR_TAG(`NWD_DLPI_REQ',`50',`DLPI information request putmsg failed : ')
INFORM_STR_TAG(`NWD_DLPI_ACK',`51',`DLPI information getmsg (info_ack) failed: ')
INFORM_STR_TAG(`NWD_UNB_REQ',`52',`EthernetDLPI unbind putmsg (request) failed: ')
INFORM_STR_TAG(`NWD_UNB_ACK',`53',`EthernetDLPI getmsg (unbindack) failed: ')
INFORM_STR_TAG(`NWD_UNB_RESP',`54',`EthernetDLPI unbind response incorrect: ')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for NWSAPUTIL')
CLINE(`$ ')
SET(MSG_SUTIL_SET,11)
define(`Module_Name', `NWSAPUTIL')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`P_EXCLUSIVE', `1', `Options \"a\", \"d\", and \"q\" are mutually exclusive')
INFORM_STR_TAG(`P_UNKNOWN', `2', `Unknown option \"%s\"\n')
INFORM_STR(  `P_USAGE_HEAD', `10', `Usage:  nwsaputil <-nts [a | d | q]>\n')
INFORM_STR(     `P_USAGE_1', `11', `           n <name>   : Server Name\n')
INFORM_STR(     `P_USAGE_2', `12', `           t <type>   : Server Type\n')
INFORM_STR(     `P_USAGE_3', `13', `           s <socket> : Server Socket\n')
INFORM_STR(     `P_USAGE_4', `14', `           a          : Add Server to permanent list\n')
INFORM_STR(     `P_USAGE_5', `15', `           d          : Delete Server from permanent list\n')
INFORM_STR(     `P_USAGE_6', `16', `           q          : Query permanent server list\n')
INFORM_STR_TAG(`P_MISSING_ARG1', `17', `Options \"s\" and \"t\" are required with add option\n')
INFORM_STR_TAG(`P_MISSING_ARG2', `18', `Option \"t\" is required with delete option\n')
INFORM_STR_TAG(`P_INFO_UNAVAIL', `20',`Server information not available\n')
INFORM_STR_TAG(`P_NO_ACTION', `21',`No action specified\n')
INFORM_STR_TAG(`P_NO_PERM', `22',`Must be root user to execute this command\n')
LCOM
LCOM	The following messages are appended with a SAPPerror.
LCOM
INFORM_STR_TAG(`P_DELETE_FAIL', `23',`Delete function failed: ')
INFORM_STR_TAG(`P_ADD_FAIL', `24',`Add function failed: ')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for RROUTER')
CLINE(`$ ')
SET(MSG_RROUTER_SET,12)
define(`Module_Name', `RROUTER')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`RRT_OPEN_FAILED', 1, `Open of %s failed: ')
INFORM_STR_TAG(`RRT_RESET_ROUTER', 2, `Reset router failed\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for DROUTER')
CLINE(`$ ')
SET(MSG_DROUTER_SET,13)
define(`Module_Name', `DROUTER')
define(`Module_Version', `2.0')
LCOM
INFORM_STR(`DROUT_USAGE1', 1, `Usage: %s [options]\n')
INFORM_STR(`DROUT_USAGE2', 2, `       options: -1    one column mode\n')
INFORM_STR(`DROUT_USAGE3', 3, `                -C    multi-column mode with header\n')
INFORM_STR(`DROUT_USAGE4', 4, `                -? or -h  print this message\n')
CLINE(`$ ')
CLINE(`$	The following is data is colums with the format indicated and')
CLINE(`$	the column header as given below.')
CLINE(`$ ')
INFORM_STR(`DROUT_NEWLINE', 10, `\n')
INFORM_STR(`DROUT_HEAD1', 11, `NETWORK   HOPS  TIME  NODE        ')
INFORM_STR(`DROUT_HEAD2', 12, `--------  ----  ----  ------------')
INFORM_STR(`DROUT_FORMAT', 13, `%08.8lX%6.4hu%6.4hu  %02.2X%02.2X%02.2X%02.2X%02.2X%02.2X')
INFORM_STR(`DROUT_EOT', 14, `END OF TABLE      %d known networks\n')
CLINE(`$ ')
CLINE(`$	When two columns are printed, this is the space between columns')
CLINE(`$ ')
INFORM_STR(`DROUT_COLUMN', 15, `    ')
INFORM_STR_TAG(`DROUT_ALLOC', 16, `Allocation of %d bytes has failed\n')
CLINE(`$ ')
CLINE(`$	The following error messages are followed by a system error message')
CLINE(`$	(output of perror) on the same line.  These messages require a')
CLINE(`$	trailing space and do not have an ending newline (\n).')
CLINE(`$ ')
INFORM_STR_TAG(`DROUT_OPEN_FAIL', 20, `Open of %s failed: ')
INFORM_STR_TAG(`DROUT_IOCTL', 21, `The ioctl system call (%s) has failed: ')
INFORM_STR_TAG(`DROUT_FUNC_FAIL', 23, `The getmsg system call failed: ')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for STARTNPS')
CLINE(`$ ')
SET(MSG_STRT_SET,14)
define(`Module_Name', `STARTNPS')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`NSTRT_CFG_X', 1, `Configuration error on %s: ')
INFORM_STR_TAG(`NSTRT_NPS_EXEC_FAIL', 2, `The execl system call to start NPSD failed: ')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for STATNPS')
CLINE(`$ ')
SET(MSG_STAT_SET,15)
define(`Module_Name', `STATNPS')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`NSTAT_BAD_CONFIG', 1, `The configuration file could not be initialized\n')

CLINE(`$ ')
CLINE(`$ ------------------------------------------------------------------')
CLINE(`$ ')
CLINE(`$	Messages for STOPNPS')
CLINE(`$ ')
SET(MSG_STOP_SET,16)
define(`Module_Name', `STOPNPS')
define(`Module_Version', `2.0')
LCOM
INFORM_STR_TAG(`NSTOP_BAD_CONFIG', 1, `The configuration file could not be initialized\n')
INFORM_STR_TAG(`NSTOP_BAD_INIT', 2, `You cannot stop the IPX protocol stack while in multiuser mode.\n')

CLINE(`$ ************************* end of file *********************')
HLINE(`#endif /* for __npsmsgtable_h__ */')
