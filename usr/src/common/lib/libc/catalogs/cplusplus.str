/*		Copyright (c) 1990, 1991, 1992, 1993, 1994 Novell, Inc. All Rights Reserved.		*/
/*		Copyright (c) 1988, 1990 Novell, Inc. All Rights Reserved.		*/
/*		  All Rights Reserved  		*/

/*		THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF Novell Inc.		*/
/*		The copyright notice above does not evidence any   		*/
/*		actual or intended publication of such source code.		*/

#ident	"@(#)catalogs:cplusplus.str	1.9"
%s: %s is not found or cannot be executed\n
execution of C++ prelinker is abandoned\n
cannot open %s for reading\n
usage: patch [-dV] file\n
cannot open file\n
Elf version out-of-date\n
cannot elf_begin file\n
cannot get elf header\n
cannot get .data header\n
cannot get .strtab header\n
cannot get symbol table\n
too many files\n
_main() not found\n
Bad _main() loaded- libC probably not set up for patch\n
can't reopen file\n
can't seek\n
can't write file\n
%s %s\n
can't write\n
symbol table entsize is 0; executable may have been stripped\n
%s: %s no longer needed in %s\n
%s: %s assigned to file %s\n
C++ prelinker
%s: executing: %s\n
Unrecognized option: %c\n
%s: error: %s\n
out of memory\n
invalid input format\n
bad instantiation information file -- instantiation assigned to more than one file\n
invalid nm format option\n
command line error\n
instantiation loop\n
invalid error code\n
pl_read_input_line: input line too long.\n
Instantiation information file is missing\n
%s:%s %s\n
Could not reopen instantiation information file.\n
last line of file ends without a newline
last line of file ends with a backslash
#include file %sq includes itself
out of memory
could not open source file %sq
comment unclosed at end of file
unrecognized token
missing closing quote
nested comment is not allowed
\"#\" not expected here
unrecognized preprocessing directive
parsing restarts here after previous syntax error
expected a file name
extra text after expected end of preprocessing directive
%sq is not a file containing source text
%sq is not a valid source file name
expected a \"]\"
expected a \")\"
extra text after expected end of number
identifier %sq is undefined
type qualifiers are meaningless in this declaration
invalid hexadecimal number
integer constant is too large
invalid octal digit
quoted string should contain at least one character
too many characters in character constant
character value is out of range
expression must have a constant value
expected an expression
floating constant is out of range
expression must have integral type
expression must have arithmetic type
expected a line number
invalid line number
#error directive: %s
the #if for this directive is missing
the #endif for this directive is missing
directive is not allowed -- an #else has already appeared
division by zero
expected an identifier
expression must have arithmetic or pointer type
operand types are incompatible (%t1 and %t2)
expression must have integral or pointer type
expression must have pointer type
#undef may not be used on this predefined name
this predefined name may not be redefined
macro redefined differently
cast between pointer-to-object and pointer-to-function
duplicate macro parameter name
\"##\" may not be first in a macro definition
\"##\" may not be last in a macro definition
expected a macro parameter name
expected a \":\"
too few arguments in macro invocation
too many arguments in macro invocation
operand of sizeof may not be a function
this operator is not allowed in a constant expression
this operator is not allowed in a preprocessing expression
function call is not allowed in a constant expression
this operator is not allowed in an integral constant expression
integer operation result is out of range
shift count is negative
shift count is too large
declaration does not declare anything
expected a \";\"
enumeration value is out of \"int\" range
expected a \"}\"
integer conversion resulted in a change of sign
integer conversion resulted in truncation
incomplete type is not allowed
operand of sizeof may not be a bit field
operand of \"&\" may not be a constant
operand of \"&\" in an initializer must be static
invalid operand of \"&\"
operand of \"*\" must be a pointer
argument to macro is empty
this declaration has no storage class or type specifier
a parameter declaration may not have an initializer
expected a type specifier
a storage class may not be specified here
more than one storage class may not be specified
storage class is not first
type qualifier specified more than once
invalid combination of type specifiers
invalid storage class for a parameter
invalid storage class for a function
a type specifier may not be used here
array of functions is not allowed
array of void is not allowed
function returning function is not allowed
function returning array is not allowed
identifier-list parameters may only be used in a function definition
function type may not come from a typedef
the size of an array must be greater than zero
array is too large
a translation unit must contain at least one declaration
a function may not return a value of this type
an array may not have elements of this type
a declaration here must declare a parameter
duplicate parameter name
%sq has already been declared in the current scope
forward-defined enum type is nonstandard
class is too large
struct or union is too large
invalid size for bit field
invalid type for a bit field
zero-length bit field must be unnamed
signed bit field of length 1
expression must have (pointer-to-) function type
expected either a definition or a tag name
statement is unreachable
expected \"while\"
this use of a default argument is nonstandard
%n was referenced but not defined
a continue statement may only be used within a loop
a break statement may only be used within a loop or switch
non-void %nd should return a value
a void function may not return a value
cast to type %t is not allowed
return value type does not match the function type
a case label may only be used within a switch
a default label may only be used within a switch
case label value has already appeared in this switch
default label has already appeared in this switch
expected a \"(\"
expression must be an lvalue
expected a statement
loop is not reachable from preceding code
a block-scope function may only have extern storage class
expected a \"{\"
expression must have pointer-to-class type
expression must have pointer-to-struct-or-union type
expected a member name
expected a field name
%n has no member %sq
%n has no field %sq
expression must be a modifiable lvalue
taking the address of a register variable is not allowed
taking the address of a bit field is not allowed
too many arguments in function call
unnamed prototyped parameters not allowed when body is present
expression must have pointer-to-object type
program too large or complicated to compile
a value of type %t1 cannot be used to initialize an entity of type %t2
%n may not be initialized
too many initializer values
declaration is incompatible with %nfd
%n has already been initialized
a global-scope declaration may not have this storage class
a type name may not be redeclared as a parameter
a typedef name may not be redeclared as a parameter
conversion of nonzero integer to pointer
expression must have class type
expression must have struct or union type
old-fashioned assignment operator
old-fashioned initializer
expression must be an integral constant expression
expression must be an lvalue or a function designator
declaration is incompatible with previous %nod
name conflicts with previously used external name %sq
unrecognized #pragma
expression must have arithmetic, pointer, or void type
could not open temporary file %sq
name of directory for temporary files is too long (%sq)
too few arguments in function call
invalid floating constant
argument of type %t1 is incompatible with parameter of type %t2
a function type is not allowed here
expected a declaration
pointer points outside of underlying object
invalid type conversion
external/internal linkage conflict with previous declaration
floating-point value does not fit in required integral type
expression has no effect
subscript out of range
constant string subscript out of range
%n was declared but never referenced
\"&\" applied to an array has no effect
right operand of \"%%\" is zero
argument is incompatible with formal parameter
argument is incompatible with corresponding format string conversion
could not open source file %sq (no directories in search list)
type of cast must be integral
type of cast must be arithmetic or pointer
dynamic initialization in unreachable code
pointless comparison of unsigned integer with zero
possible use of \"=\" where \"==\" was intended
enumerated type mixed with another type
error while writing %s file
invalid intermediate language file
type qualifier is meaningless on cast type
unrecognized character escape sequence
zero used for undefined preprocessing identifier
expected an asm string
an asm function must be prototyped
an asm function may not have an ellipsis
asm may only be used to declare a function
an asm function may not have a storage class
asm return value size does not match function return type
asm parameter size does not match function parameter size
expected a \"%\"
invalid combination of asm control specifiers
extra text after expected end of asm control line
expected an asm control specifier
this asm name is already defined
invalid register name
an asm parameter may not have void type
expected an asm type specification
invalid asm type specification
invalid asm type width
invalid asm constant
an asm temporary may not have this type
this parameter may not be referenced because it has no type
the return value may not be referenced because its type is void
invalid register specifier
an expansion leaf must have at least one expansion line
the return value may not be referenced because it has no type
the return value may not have this asm type
error while deleting file %sq
integral value does not fit in required floating-point type
floating-point value does not fit in required floating-point type
floating-point operation result is out of range
function declared implicitly
the format string requires additional arguments
the format string ends before this argument
invalid format string conversion
macro recursion
extra final comma is nonstandard
bit field cannot contain all values of the enumerated type
nonstandard type for a bit field
declaration is not visible outside of function
old-fashioned typedef of \"void\" ignored
left operand is not a struct or union containing this field
pointer does not point to struct or union containing this field
variable %sq was declared with a never-completed type
controlling expression is constant
selector expression is constant
invalid specifier on a parameter
invalid specifier outside a class declaration
duplicate specifier in declaration
a union is not allowed to have a base class
multiple access control specifiers are not allowed
class or struct definition is missing
qualified name is not a member of class %t or its base classes
a nonstatic member reference must be relative to a specific object
a nonstatic data member may not be defined outside its class
%n has already been defined
pointer to reference is not allowed
reference to reference is not allowed
reference to void is not allowed
array of reference is not allowed
reference %n requires an initializer
expected a \",\"
type name is not allowed
type definition is not allowed
invalid redeclaration of type name %sq
const %n requires an initializer
\"this\" may only be used inside a nonstatic member function
constant value is not known
explicit type is missing (\"int\" assumed)
access control not specified (%sq by default)
not a class or struct name
duplicate base class name
invalid base class
%n is inaccessible
%no is ambiguous
old-style parameter list (anachronism)
declaration may not appear after executable statement in block
base class %t is inaccessible
name is not a member of a base class of %sq
access adjustment in a \"private\" section is not allowed
increasing an inherited member's access is not allowed
restricting an inherited member's access is not allowed
improperly terminated macro invocation
invalid access declaration -- %no1 is hidden by %no2
name followed by \"::\" must be a class name
invalid friend declaration
a constructor or destructor may not return a value
invalid destructor declaration
invalid declaration of a member with the same name as its class
global-scope qualifier (leading \"::\") is not allowed
the global scope has no %sq
qualified name is not allowed
NULL reference is not allowed
initialization with \"{...}\" is not allowed for object of type %t
base class %t is ambiguous
derived class %t1 contains more than one instance of class %t2
derived class %t1 has class %t2 as a virtual base class
no instance of constructor %no matches the argument list
copy constructor for class %t is ambiguous
no default constructor exists for class %t
%sq is not a nonstatic data member or base class of class %t
indirect nonvirtual base class is not allowed
invalid union member -- class %t has a disallowed member function
cannot overload functions -- parameter types are too similar
invalid use of non-lvalue array
expected an operator
inherited member is not allowed
cannot determine which instance of %n is intended
a pointer to a bound function may only be used to call the function
typedef name has already been declared (with same type)
%n has already been defined
type does not match any instance of %n
no instance of %n matches the argument list
type definition is not allowed in function return type declaration
default argument not at end of parameter list
redefinition of default argument
more than one instance of %n matches the argument list:
more than one instance of constructor %no matches the argument list:
default argument of type %t1 is incompatible with parameter of type %t2
cannot overload functions distinguished by return type alone
no suitable user-defined conversion from %t1 to %t2 exists
const or volatile qualifier on this function is not allowed
only nonstatic member functions may be virtual
function may not be called for const- or volatile-qualified object
program too large to compile (too many virtual functions)
type differs from base class virtual function by return type alone
override of virtual %n is ambiguous
pure specifier (\"= 0\") allowed only on virtual functions
badly-formed pure specifier (only \"= 0\" is allowed)
data member initializer is not allowed
object of abstract class type is not allowed
function returning abstract class is not allowed
duplicate friend declaration
inline specifier allowed on function declarations only
\"inline\" is not allowed
invalid storage class for an inline function
invalid storage class for a class member
member function of local class -- definition is required
%nf is inaccessible
direct path to base class %t gives less access than indirect path
class %t has no copy constructor to copy a const object
defining an implicitly declared member function is not allowed
class %t has no suitable copy constructor
linkage specification is not allowed
unknown external linkage specification
linkage specification is incompatible with previous %nod
more than one instance of %n has \"C\" linkage
class %t has more than one default constructor
value copied to temporary, reference to temporary used
\"operator%s\" must be a member function
operator may not be a static member function
no arguments allowed on user-defined conversion
too many arguments for operator function
too few arguments for operator function
nonmember operator requires an argument with class type
default argument is not allowed
more than one user-defined conversion from %t1 to %t2 applies:
none of the available operator functions matches these operands
more than one operator %sq matches these operands:
operator new() requires first argument of type \"size_t\"
operator new() requires return type of \"void *\"
operator delete() requires return type of \"void\"
operator delete() requires first argument of type \"void *\"
second argument of operator delete() must be of type \"size_t\"
type must be an object type
base class %t has already been initialized
base class name required -- %t assumed (anachronism)
%n has already been initialized
name of member or base class is missing
assignment to \"this\" (anachronism)
\"overload\" keyword used (anachronism)
invalid anonymous union -- nonpublic member is not allowed
invalid anonymous union -- member function is not allowed
global anonymous union must be declared static
%nf provides no initializer for:
implicitly generated constructor for class %t cannot initialize:
%n defines no constructor to initialize the following:
%n has an uninitialized const or reference member
%n has an uninitialized const field
class %t has no assignment operator to copy a const object
class %t has no suitable assignment operator
ambiguous default assignment operator for class %t
const or volatile qualifier is not allowed
declaration requires a typedef name
declaration requires an object name
\"virtual\" is not allowed
\"static\" is not allowed
cast of bound function to normal function pointer (anachronism)
expression must have pointer-to-member type
extra \";\" ignored
declaring a member constant is nonstandard
a pointer to const may not be deleted
no instance of overloaded %no matches these operands
operator delete() may not be overloaded
no instance of %n matches the required type
delete array size expression ignored (anachronism)
operator->() requires pointer-to-class return type
a cast to an abstract class is not allowed
function \"main\" may not be called or have its address taken
a new-initializer may not be specified for an array
a member function may not be redeclared outside its class
pointer to incomplete class type is not allowed
reference to local variable of enclosing function is not allowed
single-argument function used for postfix %sq (anachronism)
access adjustment is not allowed -- mixed accessibility for %n
implicitly generated assignment operator cannot copy:
cast to array type is nonstandard (treated as cast to %t)
%n has an operator new() but no operator delete()
%n has an operator delete() but no operator new()
destructor for base class %t is not virtual
%n has no accessible constructors
%n has already been declared
function \"main\" may not be declared inline
member function with the same name as its class must be a constructor
using nested %n (anachronism)
a destructor may not have parameters
copy constructor for class %t may not have a parameter of type %t
function return type is incomplete
protected %n is not accessible through a %t pointer or object
a parameter is not allowed
an \"asm\" declaration is not allowed at this point
no suitable conversion function from %t1 to %t2 exists
delete of pointer to incomplete class
no suitable constructor exists to convert from %t1 to %t2
more than one constructor applies to convert from %t1 to %t2:
more than one conversion function from %t1 to %t2 applies:
more than one conversion function from %t to a built-in type applies:
const %n
reference %n
%n
built-in operator %sq
%n (ambiguous by inheritance)
a constructor or destructor may not have its address taken
dollar sign (\"$\") used in identifier
temporary used for initial value of reference to non-const (anachronism)
qualified name is not allowed in member declaration
enumerated type mixed with another type (anachronism)
the size of an array in \"new\" must be non-negative
returning reference to local temporary
const qualifier dropped in initializing reference to non-const
\"enum\" declaration is not allowed
initial value of reference has excess const/volatile qualifiers
initial value of reference to non-const has incorrect type
a pointer to function may not be deleted
conversion function must be a nonstatic member function
nonglobal template declaration is not allowed
expected a \"<\"
expected a \">\"
template parameter declaration is missing
argument list for %nf is missing
too few arguments for %nf
too many arguments for %nf
template parameter for a function template must be a type
%n1 is not used in declaring the argument types of %n2
two nested types have the same name: %no1 and %nod2 (cfront compatibility)
global %no1 was declared after nested %nod2 (cfront compatibility)
template parameter %no was declared but never referenced
more than one instance of %n matches the required type
the type \"long long\" is nonstandard
omission of \"%s\" is nonstandard
return type may not be specified on a conversion function
detected during:
instantiation of %nf %p
implicit generation of %nf %p
excessive recursion at instantiation of %n
\"%s\" is not a function or static data member
argument of type %t1 is incompatible with template parameter of type %t2
initialization requiring a temporary or conversion is not allowed
declaration of %sq hides function parameter
initial value of reference to non-const must be an lvalue
implicit definition of %nf %p
\"template\" is not allowed
%t is not a class template
static data member may not be an anonymous union
\"main\" is not a valid name for a function template
invalid reference to %n (union/nonunion mismatch)
a template argument may not reference a local type
tag kind of %s is incompatible with declaration of %nfd
the global scope has no tag named %sq
%n has no tag member named %sq
member function typedef (allowed for cfront compatibility)
%n may be used only in pointer-to-member declaration
empty initializer list is nonstandard
a template argument may not reference a non-external entity
name followed by \"::~\" must be a class name or a type name
destructor name does not match name of class %t
type used as destructor name does not match type %t
%n may not be redeclared \"inline\" after being called
destructor name does not match left operand of \"->\" or \".\"
invalid storage class for a template declaration
%n is an inaccessible type (allowed for cfront compatibility)
a return type is not allowed
invalid instantiation pragma argument
%nf is not an entity that can be instantiated
compiler generated function %n cannot be instantiated
inline function %n cannot be instantiated
pure virtual function %n cannot be instantiated
%n cannot be instantiated -- no template definition was supplied
%n cannot be instantiated -- a specific definition has been supplied
class %t has no constructor
%n1 must be used in a parameter without a default value in %n2
no instance of %n matches the specified type
declaring a void parameter list with a typedef is nonstandard
global %n used instead of %n2 (cfront compatibility)
template parameter %sq may not be redeclared in this scope
declaration of %sq hides template parameter
template argument list must match the parameter list
conversion function to convert from %t1 to %t2 is not allowed
extra argument of postfix \"operator%s\" must be of type \"int\"
an operator name must be declared as a function
operator name is not allowed
class template specific definition not at global scope
nonstandard form for taking the address of a member function
too few template parameters -- does not match previous declaration
too many template parameters -- does not match previous declaration
function template for operator delete() is not allowed
class template and template parameter may not have the same name
%no cannot be used to designate constructor for %n2
a template argument may not reference an unnamed type
enumerated type is not allowed
type qualifier on a reference type is meaningless
a value of type %t1 cannot be assigned to an entity of type %t2
pointless comparison of unsigned integer with a negative constant
cannot convert to incomplete class %t
const object requires an initializer
object has an uninitialized const or reference member
nonstandard preprocessing directive
%n may not have a template argument list
initialization with \"{...}\" expected for aggregate object
pointer-to-member selection class types are incompatible (%t1 and %t2)
pointless friend declaration
\".\" used in place of \"::\" to form a qualified name (cfront anachronism)
non-const function called for const object (cfront anachronism)
a dependent statement may not be a declaration
a parameter may not have void type
instantiation of %na %p
processing of template argument list for %na %p
this operator is not allowed in a template argument expression
try block requires at least one handler
handler requires an exception declaration
handler is masked by default handler
handler is masked by previous handler for type %t
use of a local type to specify an exception
redundant type in throw specification
throw specification is incompatible with that of previous %nd%s
previously specified: no exceptions will be thrown
previously omitted: %t
previously specified but omitted here: %t
support for exception handling is disabled
omission of throw specification is incompatible with previous %nd
could not create instantiation information file %sq
non-arithmetic operation not allowed in nontype template argument
use of a local type to declare a nonlocal variable
use of a local type to declare a function
transfer of control bypasses initialization of:
%nd
transfer of control into an exception handler
%n is used before its value is set
%n was set but never used
%n cannot be defined in the current scope
throw specification is not allowed
external/internal linkage conflict for %nfd
%nf will not be called for implicit or explicit conversions
tag kind of %s is incompatible with template parameter of type %t
function template for operator new(size_t) is not allowed
invalid access declaration -- inherited name %sq is ambiguous
pointer to member of type %t is not allowed
ellipsis is not allowed in operator function parameter list
%no is reserved for future use as a keyword
invalid macro definition: 
invalid macro undefinition: 
invalid preprocessor output file 
cannot open preprocessor output file 
IL file name must be specified if input is 
invalid IL output file 
cannot open IL output file 
invalid C output file 
cannot open C output file 
error in debug option argument
invalid option: 
back end requires name of IL file
could not open IL file 
invalid number: 
incorrect host CPU id
invalid instantiation mode: 
missing include file directory name
invalid error limit: 
invalid raw-listing output file 
cannot open raw-listing output file 
invalid cross-reference output file 
cannot open cross-reference output file 
invalid error output file 
cannot open error output file 
virtual function tables can only be suppressed (-V) when compiling C++
anachronism option (-O) can be used only when compiling C++
instantiation mode (-t) can be used only when compiling C++
automatic instantiation mode (-T) can be used only when compiling C++
implicit template inclusion mode (-B) can be used only when compiling C++
exception handling option (-x) can be used only when compiling C++
strict ANSI mode is incompatible with K&R mode
strict ANSI mode is incompatible with cfront mode
missing source file name
output files may not be specified when compiling several input files
too many arguments on command line
-o was specified, but no output file is needed
IL display requires name of IL file
a template parameter may not have void type
excessive recursive instantiation of %n due to instantiate-all mode
strict ANSI mode is incompatible with allowing anachronisms
a throw expression may not have void type
-tlocal mode is incompatible with automatic instantiation
undefining __STDC__
malformed #pragma pack(n)
invalid value for #pragma pack
string literal expected after #ident
invalid argument to -Z: 
invalid value for -Q: 
unknown error
parameter of abstract class type is not allowed
array of abstract class is not allowed
floating-point template parameter is nonstandard
detected during instantiation of %na %p
detected during processing of template argument list for %na %p
detected during implicit definition of %nf %p
detected during instantiation of %nf %p
detected during implicit generation of %nf %p
