/*		Copyright (c) 1990, 1991, 1992, 1993, 1994 Novell, Inc. All Rights Reserved.		*/
/*		Copyright (c) 1988, 1990 Novell, Inc. All Rights Reserved.		*/
/*		  All Rights Reserved  		*/

/*		THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF Novell Inc.		*/
/*		The copyright notice above does not evidence any   		*/
/*		actual or intended publication of such source code.		*/

#ident	"@(#)catalogs:cds.str	1.25"
-- 1 --
Illegal suffix for object file %s\n
using -p, ignoring the -q%c option\n
using -qp, ignoring the -q%c option\n
using -q%c, ignoring the -p option\n
using -q%c, ignoring the -qp option\n
No such profiler %sprof\n
%s %s\n
Invalid subargument: -W%s\n
Invalid argument: -Y %s\n
Too many arguments: -Y %s,%s,%s\n
illegal option -B%s\n
illegal option -d%c\n
illegal option -d%s\n
illegal option -Q %c\n
illegal option -X%c\n
Illegal argument to -K flag, '-K %s'\n
Option -%c requires an argument\n
Usage: cc [ -%s ] files ...\n
%cprof and optimization mutually exclusive; -O disabled\n
%cprof is not available\n
-o would overwrite %s\n
using %s, ignoring all other -X options\n
%s:\n
Conflicting option -S with %s\n
Conflicting option -%c with %s\n
Profiler failed, '-q %c' ignored for %s\n




-YP may not be used with -YF\n
Bad option -Y %s,%s\n
command name must end in \"%s\"\n
Out of space\n
 process: %s\n
Can't exec %s\n
Process table full - try again later\n
Lost %s - No child process!\n
Process %s core dumped with signal %d\n
Process %s exited with status %d \n
Can't move %s to %s\n
 cannot create temporaries: %s\n
Unrecognized pass name: '%s%c\n'
Too many files for performance stats\n
Option -Z requires an argument\n
Illegal argument to -Z flag\n
Illegal argument to -Zp flag\n
Optimizer failed, -O ignored for %s\n
\t[-A name[(tokens)]]: associates name as a predicate with the\n
\t\tspecified tokens as if by a #assert preprocessing directive.\n
\t[-B c]: c can be either dynamic or static.\n
\t[-C]: cause the preprocessing phase to pass all comments.\n
\t[-c]: suppress the link editing phase of the compilation and\n
\t\tdo not remove any produced object files.\n
\t[-D name[=tokens]]: associates name with the specified tokens\n
\t\tas if by a #define preprocessing directive.\n
\t[-d c]: c can be either y or n. -dy specifies dynamic linking\n
\t\tin the link editor. -dn specifies static linking.\n
\t[-E]: only preprocess the named C files and send the results\n
\t\tto the standard output.\n
\t[-e optarg]: pass to link editor.\n

\t[-G]: directs the link editor to produce shared object.\n
\t[-g]: cause the compiler to produce additional information\n
\t\tneeded for the use of sdb.\n
\t[-H]: print the path name of each file included during the\n
\t\tcurrent compilation on the standard error output.\n
\t[-h optarg]: pass to like editor.\n
\t[-I dir]: alter the search for included files whose names don't\n
\t\tbegin with / to look in dir prior to the usual directories.\n
\t[-K [mode,goal,PIC,minabi]]: -K mode will compile the named C\n
\t\tfiles with the indictaed floating-point mode. -K goal pass\n
\t\tnecessary information to optimizor. -K PIC causes position-\n
\t\tindependent code (PIC) to be generated. -K minabi directs\n
\t\tthe compilation system to use the C library which minimize\n
\t\tdynamic linking.\n
\t[-L dir]: add dir to the list of directories searched for\n
\t\tlibrary by link editor.\n
\t[-l name]: search the library libname.a or libname.so.\n
\t[-O]: arrange for compilation phase optimization.\n
\t[-o pathname]: produce an output object file pathname, instead\n
\t\tof the default a.out.\n
\t[-P]: only preprocess the named C files and leave the result\n
\t\tin corresponding files suffixed .i.\n
\t[-p]: arrange for the compiler to produce code that counts\n
\t\tthe number of times each routine is called.\n
\t[-Q c]: c can be either y or n. -Qy indicates identification\n
\t\tinformation about each invoked compilation tool will be\n
\t\tadded to the output files. -Qn suppress the information.\n
\t[-q c]: c can be either l or p. -ql arranges for the production\n
Coverage Data Source: %s\n
\t\tis executed. -qp is synonym for -p.\n
\t[-S]: compile but do not assemble or link edit the named C files.\n
\t[-U name]: causes any definition of name to be forgotten.\n
\t[-u optarg]: pass to link editor.\n
\t[-V]: cause each invoked tool to print its version information\n
\t\ton the standard error output.\n
\t[-v]: cause the compiler to perform more and stricter semantic\n
\t\tcheck, and to enable lint-like checks on the named C files.\n
\t[-W tool,arg1[,arg2 ...]]: hand off the arguments \"arg(x)\"\n
\t\teach as a separate argument to tool.\n
\t[-X c]: specify degree of conformance to the ANSI C standard.\n
\t[-Y item,dir]: specify a new directory dir for item.\n
\t[-z optarg]: pass to link editor.\n
\t[-#]: turn on debug information.\n
\t[-?]: display cc options usage.\n
%s\n
\t[-Zp[124]]: pack structure for i386 acomp.\n
EOF in comment
empty character constant
%s in %s
EOF
newline
string literal
character constant
token too long
invalid source character: '%c'
invalid source character: <%#x>
confused asgop
unknown size
confused type %d in cg_tconv()
cg_pushlc:  lc already saved
cg_poplc:  no saved lc
invalid initializer
confused cg_inflush()
access through \"void\" pointer ignored
strange storage class %d in cg_p2tree()
confused cg_p2tree()
No space for cgq
duplicate case in switch: %d
confused cg_asmold()
asm() argument must be normal string literal
embedded NUL not permitted in asm()
empty translation unit
\"long double\" not yet supported; using \"double\"
\"long double\" not yet supported
cg_printf():  bad fmt char %c
invalid type combination
storage class after type is obsolescent
only one storage class allowed
auto/register/asm inappropriate here
dcl_tycl() confused about class %d, context %d
illegal type/class value
left operand of \".\" must be struct/union object
cannot access member of non-struct/union object
dubious reference to %s typedef: %s
confused dcl_name()
declaration stack underflow
use \"double\" instead of \"long float\"
overwriting previous symbol id %d for %s
null pointer tree?
non-PTR declnode
only qualifiers allowed after *
array too big
parameter redeclared: %s
ANSI C requires formal parameter before \"...\"
null dimension: %s
cannot declare array of functions or void
function cannot return function or array
function prototype parameters must have types
can't handle DN op %d\n
inappropriate qualifiers with \"void\"
void parameter cannot have name: %s
confused dcl_f_rp()
dcl_rp() overwrites symbol ID %d
parameter not in identifier list: %s
asm definition cannot have old-style parameters
parameter promotes differently in ANSI C: %s
confused dcl_e_formal(1)
confused dcl_e_formal(2)
formal parameter lacks name: param #%d
type does not match prototype: %s
parameter mismatch: %d declared, %d defined
confused scope level %d at function exit
no symbol for declarator
DS_ABS in DCL_TOP
syntax error, probably missing \",\", \";\" or \"=\"
()-less function definition
\t\tof code that counts the number of times each source line\n
cannot initialize parameter: %s
non DS_ABS state for DCL_ABS context
bad context %d in dcl_norm()
syntax error:  empty declaration
bad name in dcl_defid()
cannot have \"...\" in asm function
confused dcl_sue_type(), %#o
%s in asm function definition
expect dcl_param()
cannot initialize \"extern\" declaration: %s
saw SC_REGISTER in dcl_defid()
unknown storage class %d
cannot initialize typedef: %s
cannot initialize function: %s
confused class %d
confused state %d
confused class %d in dcl_defid()
const object should have initializer: %s
function actually returns double: %s
const object should have initializer: %s
confused dcl_sue_tname()
base type is really \"%s %s\": %s
declaration introduces new type in ANSI C: %s %s
useless declaration
typedef declares no type name
(%s) tag redeclared: %s
dubious tag in function prototype: %s %s
no enumeration constants declared: enum %s
dubious %s declaration; use tag only: %s
dubious tag declaration: %s %s
unnamed %s member
bit-field size <= 0: %s
nonportable bit-field type
bit-field too big: %s
invalid type for bit-field: %s
member cannot be function: %s
duplicate member name: %s
zero-sized struct/union
struct/union has no named members
syntax requires \";\" after last struct/union member

enumeration constant hides parameter: %s
enumerator value overflows INT_MAX (%ld)
enumerator used in its own initializer: %s
trailing \",\" prohibited in enum declaration
cannot recover from previous errors
%s before or at: %.*s
Function does not exist
bad flag to open_function
reading eof
confused in_end(), level %d
can't handle case %d in in_end()
{}-enclosed initializer required
struct/union-valued initializer required
in_init() called with NIL
%d extra byte(s) in string literal initializer ignored
initializer does not fit
non-constant initializer: op \"%s\"
%s: %#x
%s: %ld
in_pop():  too much popping
confused stack in in_nextelem()
too many struct/union initializers
insane structure member in nextelem()
too many array initializers
too many initializers for scalar
newline in string literal
newline in character constant
invalid token: %.*s%s
lx_e_getc() out of sync
lx_ungetc() out of sync
non-null curtoken in lx_s_sharp()
__asm is an extension of ANSI C
character escape does not fit in wide character
character escape does not fit in character
invalid multibyte character
out of space in doescape()
\\a is ANSI C \"alert\" character
dubious escape: \\%c
dubious escape: \\<%#x>
\\x is ANSI C hex escape
no hex digits follow \\x
overflow in hex escape
unknown wchar_t size
bad -Q
unknown allocation style '%c'
unknown language version '%c'
language version \"%s\"?
invalid -Z
loop code type %c?
loop type %c?
-d%c?

cannot open %s
error writing output file
floating-point constant folding causes exception
confused op_cascade()
op_plus:  unexpected class %d
confused op_su(), op %d
strange NAME in op_conv()
op_tysize:  bad type
al_regsort(): out of memory
confused al_e_block()
sh_proc() got bad code %d from cpp
unknown control: \"%s\"
string literal expected after #ident
string literal expected after #line
string literal expected after #file
unrecognized #pragma ignored: %.*s
no tokens follow \"#pragma\"
ignoring malformed #pragma strict_ieeefp(mode)
ignoring malformed #pragma pack(n)
bad #pragma pack value: %d
pragma weak:  %%2 in single ident version
pragma weak:  unknown %%%c
ignoring malformed #pragma weak symbol [=value]
must have type \"function-returning-unsigned\": %s
ignoring malformed #pragma int_to_unsigned symbol
%s must be declared function
block stack underflow, %d
overwriting default
loop not entered at top
statement not reached
bad sm_sp in sm_begf(), %d
bad sm_sp in sm_endf(), %d
label redefined: %s
bad code %d in sm_lp_start()
end-of-loop code not reached
confused sm_lp_end()
\"break\" outside loop or switch
\"continue\" outside loop
function expects to return value: %s
\"case\" outside switch
unreachable case label
case label affected by conversion
non-integral case expression
\"default\" outside switch
duplicate \"default\" in switch
st_save() out of memory
st_lookup() out of memory
%s undefined
removing wrong entry
static function called but not defined: %s()
undefined label: %s
unused label: %s
hiding non-top-level symbol
attempt to leave scope level %d
operand cannot have void type: op \"%s\"
integral constant too large
bad octal digit: '%c'
bad int modifier
conversion of floating-point constant to %s out of range
syntax error: \"&...\" invalid
integral constant expression expected
improper member use: %s
undefined struct/union member: %s
non-unique member requires struct/union%s: %s
implicitly declaring function to return int: %s()
undefined symbol: %s
using out of scope declaration: %s
cannot take sizeof function: %s
cannot take sizeof void
cannot take sizeof bit-field: %s
can't handle OP %s
first operand must have scalar type: op \"?:\"
improper pointer/integer combination: op \":\"
cannot do pointer arithmetic on operand of unknown size
unknown operand size: op \"%s\"
enum constants have different types: op \"%s\"
operands have incompatible pointer types: op \"%s\"
function designator is not of function type
prototype
argument
cannot return incomplete type
void expressions may not be arguments: arg #%d
argument cannot have unknown size: arg #%d
argument does not match remembered type: arg #%d
cannot take address of bit-field: %s
%s: %s
unacceptable operand for unary &
cannot dereference non-pointer type
controlling expressions must have scalar type
unknown operand size: op \"=\"
left operand of \".\" must be lvalue in this context
improper pointer/integer combination: op \"=\"
improper pointer/integer combination: arg #%d
improper cast of void expression
illegal argument to tr_conv()
tr_promote(): ND1NIL in tree walk
void function cannot return value
tr_contotptr():  . not lvalue
cannot take address of register: %s
operands must have %s type: op \"%s\"
cannot have void object: %s
incomplete struct/union/enum %s: %s
\"%s\", line %d: warning: 
\"%s\", line %d: 
\"%s\", line %d: internal compiler error:  
THE_TIME %d\n
%s: %s\n
cannot concatenate wide and regular string literals
CALL_SID %s(%d)\n
modifying typedef with \"%s\"; only qualifiers allowed
ANSI C behavior differs; not modifying typedef with \"%s\"
zero or negative subscript
\"void\" must be sole parameter
\"asm\" valid only for function definition
only \"register\" valid as formal parameter storage class

string literal must be sole array initializer
typedef already qualified with \"%s\"
conversion to float is out of range
conversion to double is out of range
switch expression must have integral type
semantics of \"%s\" change in ANSI C; use explicit cast
ANSI C treats constant as unsigned: op \"%s\"
character constant too long
operands have incompatible types: op \"%s\"
enum type mismatch: op \"%s\"
enum type mismatch: arg #%d
a cast does not yield an lvalue
left operand of \"->\" must be pointer to struct/union
improper pointer subtraction
%s mismatch: %d arg%s passed, %d expected
cannot take address of register

identifier redeclared: %s
declaration missing specifiers: assuming \"int\"
cannot take sizeof function
illegal form for -B symbolic option
\t[-B sortbss assign contiguous addresses to bss symbols in each input file]\n
Readable count file (-P) unavailable with summary format (-s).\n
Readable count file (-P) unavailable with execution format (-x).\n
Readable count file (-P) unavailable with merge option (-m).\n
Invalid cover file %s
timesof: dont know this op %d\n
 invalid flag '%c'\n
last jump: not found even itself\n
unknown type of candidate\n
what oplength is that?\n
new oplength?\n
rev_op_add_pop: unexpected op %d\n
rev_op: unexpected op %d\n
rem_pop: unexpected op\n
rem_pop: unexpected length, op = %d len = %d\n
rem_pop_s2m: don't know this op %d\n
change_between_ops: no memory reference\n
write to global that was assigned to register and pointer read
sched: can't malloc\n
calcs out of bound, entry %d max %d exit %d\n
MARC: jump is %d\n
debugging and optimization mutually exclusive; -g disabled\n
argument mismatch
token-less macro argument
macro nesting too deep
macro recursion
bad token in #error directive
#include directive missing file name
no file name after expansion
empty file name
empty header name
no closing \">\" in \"#include <...\"
bad file specification
0 is invalid in # <number> directive
0 is invalid in #line directive
string literal expected after # <number>
string literal expected after #line <number>
identifier or digit sequence expected after \"#\"
digit sequence expected after \"#line\"
no tokens in #line directive
no tokens after expansion
no tokens after expansion
cannot open include file (too many open files)
cannot find include file
#include of /usr/include/... may be non-portable
%s on line %ld has no matching #endif
#elif has no preceding #if
#elif must be followed by a constant expression
#elif follows #else
#else has no preceding #if
too many #else's
#if-less #endif
#if must be followed by a constant expression
#ifdef must be followed by an identifier
#ifndef must be followed by an identifier
preprocessing a .i file
invalid token
invalid input token
stderr I/O error
malloc() fails"), "
realloc() fails"), "
cannot open 
-X invoked multiply with different arguments
-X flag must have a single argument
more than 2 files specified
usage: [-BCEHPV] [-Aname[(value)] ...] [-Dname[=value] ...] [-U name ...]\n
\t[-Idir ...] [-X[tac]] [-Ydirectory] [input [output]]\n
empty #assert directive
\"#assert identifier\" expected
\"#assert identifier (...\" expected
no tokens following \"#assert name (\"
missing tokens between parentheses
\"#assert\" missing \")\"
tokens after -A- are ignored
identifier or \"-\" expected after -A
identifier expected after \"#\"
\"(\" expected after \"# identifier\"
tokens expected after \"# identifier (\"
tokens expected between parentheses
missing \")\"
empty #unassert directive
#unassert requires an identifier token
tokens expected after \"(\"
\")\" expected
empty predicate argument
\"(\" expected after first identifier
ANSI C predefined macro cannot be redefined
cannot define \"defined\"
macro redefined
undefining __STDC__
ANSI C predefined macro cannot be undefined
cannot undefine \"defined\"
-D option argument not an identifier
-D option argument not followed by \"=\"
-U option argument not an identifier
tokens ignored after \"-U{identifier}\"
empty #define directive line
#define requires macro name
incomplete #define macro parameter list
invalid token in #define macro parameters
syntax error in macro parameters
duplicate formal parameter
bad use of \"#\" or \"##\" in macro #define
cannot begin macro replacement with \"##\"
non-formal identifier follows \"#\" in #define
comment is replaced by \"##\"
comment does not concatenate tokens
no 
macro replacement within a 
\"#\" must be followed by formal identifier in #define
cannot end macro replacement with \"#\" or \"##\"
empty #undef directive, identifier expected
identifier expected after #undef
invalid token in directive
tokens ignored at end of directive line
number expected
token not allowed in directive
missing operator
unexpected \")\"
unexpected \"(\"
missing operand
division by zero
modulus by zero
more than one character honored in character constant
operand treated as unsigned
mismatched parentheses
mismatched \"?\" and \":\"
empty constant expression after macro expansion
\"%s\", line %ld: #error\n
\"%s\", line %ld: #error: %.*s\n
\"%s\", line %ld: fatal: %s%c
command line: fatal: %s%c
\"%s\", line %ld: %s: 
command line: %s: 
\"%s\", line %ld: warning: %s: 
command line: warning: %s: 
\"%s\", line %ld: 
command line: 
\"%s\", line %ld: warning: 
command line: warning: 
%s: Internal error: Line %ld: %s 
%s: bad perf flag %c\n
cpp: %s %s\n
directive not honored in macro argument list
#include <... missing '>'
fp_in2ex:  bad exponent(1)
fp_in2ex:  bad exponent (2)
fp_in2ex:  bad exponent (3)
fp_in2ex:  junk in high part of word
fp_xtol:  bad number
fp_special:  odd op %d
fp_lshift:  losing bits
mp_sub:  lingering carry
mp_shift: bad n
mp_toi:  no bits
dfp_exp(): unknown factor %d
fp_xtoa():  confused number
Malloc failed
unresolved_branch
Bad const list?
unidentified leaf output in hash
lhs of assign not an object
object must be under unary and
Bad op type in tree copy
No executable code found in block %d
cse source not found in block
loop_build(): unbalanced loop start/stop
loop_lend(): unexpected empty stack
loop_lcond(): unexpected empty stack
Bad pattern code
Bad defining occurrence for ind var
illegal opcode
Bad fp op
Bad op
%s at file: %s line: %d\n
callreg returns bad pair
allocation fails, op %s
register overfreed
big register
illegal reclaim, op %s
register allocation error
non-REG in reallo
storage failure
rewcom is FREE
can't deal with op %s
invalid type for bitfield
rewass0
rewass1
rewass2
stocm
Runs out of registers
can't save instructions for INCALL
Can't generate in-line CALL
ctest fails
no choices for RS_MOVE
cfix rs_reclaim fails
cfix trouble
out of memory [tstr()]
COMOP match fails
subtrees share registers!
left registers prematurely available
right registers prematurely available
second part of result unavailable!
nested asm calls not now supported
bad asm tree, as_gencode()
confused genfargs()
In-line runs out of registers\n
In-line fails to assign to TEMP\n
as_save() out of space
myrealloc failed
as_start() confused
out of space defining asm %s
as_param() sequence
as_e_param() sequence
as_putc() sequence
as_end() sequence
unknown asm %s
can't get arg block, as_expand()
confused as_doargs()
error in asm; expected \";\" or \"\\n\", saw '%c'
unexpected character in asm %% line: '%c'
invalid class in asm %% line: %.*s
%%error encountered in asm function
missing formal name in %% line
name in asm %% line is not a formal: %.*s
duplicate name in %% line specification: %.*s
no actual for asm formal: %.*s
asm storage class?
ttype(0%o)
bad D option
bad D
bad ~ after S or H
bad ? after S, M, or N
bad FLD for %c
constant with side effects?
bad getlr: %c
bad table char in (): %c
spshape
bad shape range
bad special call
Bad node between SWBEG and SWEND
Switch constant of illegal type
SWCASE not in switch
Case range reversed
SWEND not in switch
Bad type for alignment
unknown memory space for off_conv()
unknown stack space for off_bigger()
unknown memory space for off_error()
unknown stack space for off_init()
** Null pointer in p2print**
gtsize(TSTRUCT)
Bad type for size
NULL output file pointer
NULL debug output file pointer
Unexpected structure return
paint: bad node received
Bad extract_lhs
Bad extract_rhs
Botched semiasg
Unknown cse id
bad node passed to csecopy\n
Bad register for cse
Bad register number in r_caller array
Register is both scratch and caller save
bad node in uncomma
Internal: bad op type
semi_to_first
unprot() called without matching protect()
sincode:  got funny node\n
sincode: bad size for initializer
defnam(): ICOMMON not yet implemented
force
dlabel
genbr
genbr1
rcomma
argument size is too big
out of memory
count_refs: unexpected LTYPE %o
can't get more room for %s
illegal location counter
string file disappeared???
floating point stack underflow
floating point stack overflow
fp_save(): empty stack
fp_save: bad op: %d
fp_xch: illegal exchange value: %d
fp_suffix(): illegal type
illegal argument to ZE
extended-precision operand must be on stack
Bad operation in Z2 macro: %d
Bad ZL count
bad ZL
bad Zd%c
botched ZM macro
Bad Z+ operator %s
botched Z macro %c
Unknown CSE id
confused node in conput
insput
starput: illegal offset in ICON node: %s
confused findstar, op %s
adrput:  U& over nonaddressable node
adrput: illegal address
upput:  confused addressing mode
acon: illegal offset in ICON node: %s
special shape used
bad rs_move
blockmove: BMOVEO unsupported
Bad node passed to ZM macro
blockmove: Variable length moves unsupported
costex(): not ported for i386 CG\n
bad op_loop code %d
bad op %d in sadrput()
bad class %d in op_symbol
incby: bad node op
conversion of double to integral is out of range
division by 0
modulus by 0
floating-point constant calculation out of range: op \"%s\"
shift count negative or too big: %s %ld
integer overflow detected: op \"%s\"
cannot open st_perf.out
bucketsz[] too small
the -dy and -a flags are incompatible
can't convert??
initialization type mismatch
invalid switch expression type
sm_sw_case1??
sm_sw_case2??
sm_sw_case3??
argument is incompatible with prototype: arg #%d
assignment type mismatch
invalid cast expression
return value type mismatch
sm_return??
too many operands for %s
expecting %s operand for %s, operand %d
non-%s operand for %s, operand %d
invalid %s directive--expecting list of %ss
%s for %s out of range: %s
%s has been aligned for %s
name
string
alignment
integer expression
evaluatable integer expression
floating/integer expression
string/integer expression
relocatable/integer expression
expr_check():unknown expr type bit-list: %u
invalid alignment (%lu) for %s, operand %d
maximum fill size
Align/max-fill pairs for %s misordered: %lu,%lu follows %lu,%lu
section name
section stack empty: too many %s directives
size
%s missing operand 2
same section label
number of bytes
dot_fltbytes():unknown directive: (%d) %s
unsupported directive: %s
do_strmisc():unknown directive: (%d) %s
too many %s directives
unknown directive: %s
initeval():bad CHAR_BIT value: %d
integer out of range for floating conversion: %s
defined relocatable values from the same section required, op -
eval():null expression
eval():unknown operator: %s
eval():inappropriate leaf: %s
eval():nonlabel name: %s
eval():null expr symbol: %s
eval():<s> and <o> are not implemented
eval():RELOC w/out base
evalexpr():inappropriate expr type: %u
floating value too big for %s precision: %s
section contains only zero-valued bytes: %s
flt_todata():inappropriate code form: %u
setlessexpr():typeless expression; looping possible
flt_todata():initialization of floating object attempted
delayexpr():Eval not derived from expr
delayexpr():floating expression not reevaluatable
expression reevaluation differs: was
floating constant out of range: %.*s
fltexpr():creation of floating expression attempted
exprfrom():unknown context: %u
exprfrom():not .set sym w/Cont_Set
exprfrom():.set sym w/Cont_Operand
invalid expression operand type, op %s
setlessexpr():no expr for simple type .set
exprtype():unknown operator: %s
exprtype():inappropriate leaf operator: %s
exprtype():<s>,<o> not implemented
exprtype():unknown context: %u
exprtype():at label context
exprtype():at oplist context
exprtype():not .set w/Cont_Set
exprtype():olp==0 [1]
exprtype():olp==0 [2]
invalid operand expression type
setlessexpr():non-.set name
flt_todata():data size (%u) != target size (%u)
unaryexpr():non-unary operator %s
binaryexpr():non-binary opertor %s
cutoper():cannot bypass amoded operand
printexpr():unknown group for operator: %s
read error
end-of-file in comment
string missing terminating \", at %s
end-of-file
new-line
syntax error at %s
syntax error at %s: \"%s\"
syntax error at %s: %s
cannot open pipe from m4
cannot fork for m4
cannot redirect standard output for m4
cannot exec %s
cannot create stream for m4 output
cannot recover from syntax error
debug character ignored: %s
no debugging available
assembly inhibited
cannot open input file
cannot allocate %lu bytes
where():invalid file number: %lu
internal error:
cannot recover from previous error
warning:
addstr():strtab too small, need %lu, max %lu
startsyms():wrong number of symbols
openobjf():wrong number of sections
cannot open output file: %s
object file library/assembler version mismatch
cannot begin output file: %s
cannot create section: %s
cannot create data block for section: %s
cannot create section header for section: %s
address for relocation out of range: %#lx
genrel():relocation type out of range: %#lx
genrel():reloc symbol index out of range: %#lx
genrela():relocation type out of range: %#lx
genrela():reloc symbol index out of range: %#lx
too many total sections, max %u
closeobjf():missing section: %lu
cannot write output file
type for section \"%s\" out of range: %#lx
attribute for section \"%s\" out of range: %#lx
link and info unset in header for section: %s
objfsrcstr():not passed string expr
too many sections, max %u
objfsymbol():operand-typed .set: %s
value for \"%s\" out of range: %s
alignment for \"%s\" out of range: %#lx
objfsymbol():dot symbol
objfsymbol():non-label regular name: %s
address for \"%s\" out of range: %#lx
size for \"%s\" out of range: %#lx
objfsymbol():out of range binding: %u
type for \"%s\" out of range: %#lx
objfsymbol():section number too big: %lu
section too big: %s
invalid section attribute string: \"%s\"
invalid section type string: \"%s\"
assembler-generated section unavailable: %s
section already defined: %s
relosect():already has relocation section
setvarsz():smaller varinst encoding
setvarsz():varinst encoding too big
setvarsz():unknown code kind: %u
setvarsz():bad code kind (reloc)
attr_check():non-str/int section attr: %s
section attribute out of range: %s
type_check():non-str/int section type: %s
section type out of range: %s
gencode():unknown code kind: %u
gencode():inappropriate code kind (reloc): %u
gencode():\"%s\" not expected size: %u
backward .set of . causes overlap
sectalign():too many align/max pairs: %u
sectbackalign():bogus label: %s
Padding is not permitted between .backalign and %s
sectbackalign():too many align/max pairs: %u
sectpad():null ev_dot
lookup():hash calculation unroll invalid
lookup():zero length name
label was common symbol: %s
set_valid():unknown exty: %u
.set name has indeterminable type: %s
set_valid():already have size: %s
set_valid():already have type: %s
set_valid():no sect after reloc expr eval
offset for %s out of range: %s
set_valid():no sym/sect for reloc
cannot base .set \"%s\" on undefined name: %s
local/global/weak .set name cannot have %s value: %s
size_valid():non-int symbol size: %s
size for %s out of range: %s
invalid symbol type for %s: \"%s\"
type_valid():non-str/int symbol type: %s
type_valid():bad object type expr
symbol type for %s out of range: %s
align_valid():non-int symbol alignment: %s
alignment for %s out of range: %s
invalid alignment value for %s: %lu
bindsym():unknown binding: %d\n
already
previously
type
cannot define . (dot) as common
.set name cannot also be common: %s
common symbol already defined: %s
common name cannot also be .set: %s
opersym():no sect after reloc expr eval
BCD number too big: %s
int_todata():bad BCD length: %lu
int_todata():bad form: %u
value does not fit in %lu bytes: %s
expecting an optional string operand for .nopsets
invalid attribute string: \"%s\"
using obsolete semantics for .section attributes
obsolete directive ignored: %s
obsolete use of directive ignored: %s
addinst():zero length mnemonic
addinst():identical mnemonics: %s
findinst():hash calculation unroll invalid
findinst():zero length mnemonic
unknown instruction: %s
impdep_option():unknown impdep option: %#x
unknown target processor: %s
invalid length of version string: \"%s\"
 too old (\"%s\") for version: \"%s\"
invalid old-style @ token: @%s
invalid @ operator
invalid operator: @%s
invalid register: %%%s
invalid input character: %s
invalid \\ operator: \\%s
invalid right shift operator token
invalid operator token: <%s>
missing > for <s> operator
missing > for <o> operator
invalid register token
relocatable expression needs 4 bytes
relocatable expression out of range: %s
relocexpr():called in size context
dorelo():no section data
relocaddr():not relocatable
relocaddr():bad PIC modifier %#x
relocpcrel():bad PIC modifier %#x
operinst():all operands checked already
printoperand():complex literal operand: %u
printoperand():scale w/out index
extyamode():expr-less literal
setamode():single expression operand
setsubst():unknown symbol type?
setsubst():can't follow .set chain
operand must be integer or relocatable
invalid use of register in operand: %s
.set substitution produces invalid operand
do_oper():all operands checked?
literal must be integer or relocatable
'*' indirection invalid here
invalid segment register: %s
segment override ineffective with register operand
chk1oper():confused register
base must be 32-bit register: %s
index must be 32-bit register: %s
index register cannot be %%esp
scale must be integer with value 1, 2, 4, or 8
invalid .nopsets operand: \"%s\"
too few operands: %s
too many operands: %s
operand must be \"(%%dx)\" or literal
chk_inout():bad size
chk_mov():confused special register
memory operand too big
gen_getregno():no expression
gen_getregno():not a register
gen_value():can't handle size %d
gen_lit():no expr
gen_lit():bad expr. type
literal value does not fit
only 4-byte literal can be relocatable
gen_slashr():bad expr type
displacement too big
branch target too distant
gen_ent():called for size
'*' required for address mode
gen_nop():called to get size
segment override ineffective with conditional branch
segment override ineffective for instruction
-Y argument missing comma\n
-Y argument missing key(s)\n
invalid -Y key: %s\n
(EOF):%s
%s:%lu:%s
%s:%lu:(at %s:%lu):%s
%s:%lu:(at line %lu):%s
\t...too many errors\n
Usage: [-Qyn] [-VTRmn] [-Ydm,dir] [-o outfile] [-t target] file ...\n
%s for name multiply specified: %s
name multiply defined: %s
undefined name: %s
useless specification of size and/or type for name: %s
name %s bound as %s: %s
-YP and -Y%c may not be specified concurrently
the -dy and -r flags are incompatible
-Bsymbolic ignored when building a dynamic executable
-h ignored when building a static executable
the -dn and -b flags are incompatible; ignoring -b
-dn and -h are incompatible; ignoring -h
the -dn and -ztext flags are incompatible; ignoring -ztext
the -dn and -Bdynamic flags are incompatible
-dn and -G flags are incompatible
-a -r is illegal in this version of ld
-r and -s both set; only debugging information stripped
-r and -I flags are incompatible;  -I ignored
-M and -dy are incompatible
-M illegal when not building a static executable  file
no files on input command line
-d used more than once
illegal -d %s option
-e specifies multiple program entry points
-h specifies multiple output filenames for dynamic structure
-I specifies multiple interpreter paths
-o specifies multiple output file names 
-r used more than once
-x behavior is obsolete
-zdefs/nodefs appears more than once: last taken
-zdefs/nodefs appears more than once - last taken
illegal -z %s option
illegal -B %s option
more than one mapfile specified
-Q appears more than once; first setting retained
bad argument to -Q flag, ignored
illegal -Y %s option
cannot open file for reading
ld internal error:  null cur_file_ptr
%s: wrong machine type
%s: creator ELF library version is higher than the maximum version known to ld
%s: wrong machine class
%s: wrong machine byte order for data encoding
section %s: string table for symbol names not of type stringtable
section %s: malformed string table, initial or final byte
internal conversion of COFF file to ELF
input shared object in static mode
is an illegal elf file type
file type neither object nor archive
static shared library section `%s` valid only when building an executable
found a DYNAMIC section in relocatable object file
section type 0x%x may conflict with system-defined type
unknown section type 0x%x
static shared library section `%s` appears in a shared object
lib%s: library name too long
\"%s/lib%s\" pathname too long
library not found: -l%s
LD_LIBRARY_PATH has bad format
-YP default library path malformed
libelf error: can't get archive member at offset 0x%x 
can't read ELF header for archive member at offset 0x%x
elf_getehdr: 
bad file type in archive member at offset 0x%x
libelf is out of date
two segments %s and %s have the same assigned virtual address
mapfile: %d: illegal character '\\%03o' in mapfile
mapfile: %d: string does not terminate with a quote mark
cannot stat(2) mapfile \"%s\"
cannot open mapfile \"%s\"
%s: read failed
%s: %d: expected a segment name at the beginning of a line
%s: %d: segments 'interp' and 'dynamic' may not be changed
%s: %d: expected one or more segment attributes after an '='
%s: %d: flags set more than once on same line
%s: %d: unknown segment flags '%s'
%s: %d: type set mode than once on same line
%s: %d: badly formed number in segment address or length '%s'
%s: %d: length set more than once one same line
%s: %d: virtual address set more than once one same line
%s: %d: physical address set more than once one same line
%s: %d: alignment set more than once one same line
%s: %d: unknown segment attribute '%s'
%s: %d: changing existing attributes
%s: %d: flags not allowed on non-LOAD segments
%s: %d: virtual address not allowed on non-LOAD segments
%s: %d: physical address not allowed on non-LOAD segments
%s: %d: length not allowed on non-LOAD segments
%s: %d: alignment not allowed on non-LOAD segments
%s: %d: premature EOF
%s: %d: more than one section type specified
%s: %d: unknown section type '%s'
%s: %d: more than one section attribute group specified
%s: %d: badly formed attribute group '%s'
%s: %d: more than one section name specified
%s: segment %s already has a size symbol
%s: symbol %s already defined
%s: expected a symbol name after '$'
%s: %d: expected a SEMICOLON
%s: %d: expected a '=', ':', or '$'
%s: %d: internal segment type %d
%s: %d: only one INTERP segment allowed
illegal section type for map file structure
 entry point symbol `%s` is undefined
cannot create output file
cannot open output file elf header
relocations remain against allocatable but non-writable section: %s\n
internal error, output relocations for output section %s with sflag set
no defining section for symbol: %s from file: %s
Symbol referencing errors. No output written to %s
Symbol referencing errors
incompatible types for symbol: `%s` also in file %s
incompatible sizes for symbol: `%s` also in file %s
size of symbol `%s` is overridden with the larger size of tentative definition
attempt to override defined size of symbol `%s` with size of tentative definition
symbol: `%s` has different size in file %s
tentatively defined symbol `%s` appears in a shared object
tentatively defined symbol `%s` has different alignment in file %s
tentatively defined symbol `%s` appears with type other than STT_OBJECT from input file or %s
tentatively defines symbol `%s` appears in shared object
tentatively defines symbol `%s` appears in shared object %s
symbol `%s` multiply defined in two shared objects %s: size = %d; %s: size = %d
symbol `%s` multiply-defined, also in file %s
symbol table has size 0
symbol table has erroneous entry size
bogus local section definition in file; section %s defined with type %s
non_global symbol `%s` found in global section of symbol table
No read-only segments found.  Setting `%s` to 0.
No read-write segments found.  Setting `%s` to 0.
undefined symbol `%s` with non-zero value encountered
Setting `%s` and `%s` to 0.
user defined segment addresses overlap; previous segment overlaps segment named: %s, current address = %#x, segment address = %#x
segment %s calculated size larger than user-defined size
ld internal error: null list passed to list_append
ld internal error: null list tail passed to list_append
internal error: attempt to list insert after a null pointer
internal error: attempt to list prepend to a null list
elf_begin: 
elf_cntl: 
elf_end: 
elf_fsize: 
elf_getarhdr: 
elf_getarsym: 
elf_getdata: 
elf_newdata: 
elf_getident: 
elf_newphdr: 
elf_getscn: 
elf_ndxscn: 
elf_newscn: 
elf_getshdr: 
elf_rand: 
elf_strptr: 
elf_update: 
not enough memory to allocate %d bytes
unknown relocation type %d in section %s of file %s
internal error:  `_DYNAMIC` not found in ld symbol table
relocation against undefined local symbol %s from file %s
usage: %sld [-abmrstGVd:e:h:l:o:u:z:B:I:L:M:Q:Y:] file(s) ...\n
\t[-a create absolute file]\n
\t[-b do not do special PIC relocations in a.out]\n
\t[-m print memory map]\n
\t[-r create relocatable file]\n
\t[-s strip symbol and debugging information]\n
\t[-t do not warn for multiply defined symbols of different sizes]\n
\t[-G create shared object]\n
\t[-V print version information]\n
\t[-d y|n operate in dynamic|static mode]\n
\t[-e sym use sym as starting text location]\n
\t[-h name use name as internal shared object string]\n
\t[-l x search for libx.so or libx.a]\n
\t[-o outfile name output file outfile]\n
\t[-u symname create undefined symbol symname]\n
\t[-z defs|nodefs disallow|allow undefined symbols]\n
\t[-z text disallow output relocations against text]\n
\t[-B dynamic|static search for shared libraries|archives]\n
\t[-B symbolic bind external references to definitions\n\t\t when creating shared objects]\n
\t[-I interp use interp as path name of interpreter]\n
\t[-L path search for libraries in directory path]\n
\t[-M mapfile use processing directives contained in mapfile]\n
\t[-Q y|n do|do not place version information in output file]\n
\t[-YP,dirlist use dirlist as default path when searching for libraries]\n
relocations referenced\n\tfrom file(s)\n
\t%s\n
Undefined\t\t\tfirst referenced\n
 symbol  \t\t\t    in file\n
%-35s %s\n
GLOBAL SYMBOLS:\n
shndx\ttype\tbind\tsize\tvalue\toutndx\tname\tlevel\n
0x%x\t%d\t%d\t%d\t0x%x\t%d\t0x%x\t%s\t%d\n
%s: notice: 
 notice: 
%s: warning: 
 warning: 
%s: fatal error: 
 fatal error: 
%s: libelf error: 
 libelf error: 
%s: system error: 
 system error: 
%s: internal error: unknown error level
 internal error: unknown error level

assuming stdin and stdout\n
assuming stdout\n
missing a function ending
missing a function beginning
zero byte size for coverage array
CAopen(): can't open %s\n
parameter is a null pointer

error on fprint
CAopen(): missing -x or -l option\n
usage:  basicblk [-Q] [-x|l] [in] [out]\n
CAinstr(): %s\n
CAsize(): %s\n
Insufficient Storage
yylex(): %s\n
CAopen(): %s\n



CAmerge: unable to allocate temporary scratch files\n
CAmerge: temporary scratch file rejected\n
CAmerge: unrecognized return code\n
coverage array size check failed\n
file copy attempt failed\n
\t***NONE***\n
unexpected EOF\n
 cannot open %s\n
 out of space, printing errors likely in this function\n
  Out of space\n
  Out of space
 must have -m option with -d option\n
 must have -d option with -m option\n
 must have -m option with -T option\n
 argument mismatch\n
 Merge (-m) needs at least two files.\n
 Merge (-m) does not allow duplicate names.\n
  Illegal combination of options\n
Usage:\tlprof [-V] -m dfile1 dfile2[ dfile(n)] -d destfile [-T]\n
       lprof [-Vsxlp] [-I incdir] [-r srcfile] [-c cntfile] [-o prog]\n
CAmerge: Time stamp override specified, but can't merge count files\n
Count files might not be based on the same version of the source program\n
CAmerge: Can't merge count files\n
CAmerge: %s\n
***'%s' discarded***\n
*** no merged output ***\n
***unable to put output into '%s', it can be retrieved from '%s'***\n
`%s' created\n
Too few CNTFILE names specified.\n
CAreport: bad pointer passed\n
***unable to access CNTFILE '%s'***\n
***no coverage data 
for object file '%s'
in CNTFILE '%s'***
***cannot access object file '%s'***\n
 %s: Warning - internal conversion of COFF file to ELF\n
No source files found.\n\n
CArepthdr:  unrecognized report type\n
 %s appears twice in list of files, second reference discarded\n
 cannot access %s\n
     discarding source file %s\n
 file %s not found in object file\n
 symbol table indexing incorrect in executable for %s\n
      If you used -r option, the function was not found in those files\n
 function %s listed twice, ignoring second reference\n
 two functions with same line numbers but different names found\n

Date of Coverage Data Source: %.24s\n
Object: %s\n\n
percent   lines   total\tfunction\n
covered  covered  lines\tname\n\n:name
No lines in function %s\n
%6.1f%8ld%8ld\t%s\n
\n%6.1f%8d%8d\tTOTAL\n
  PROFILING DATA HAS BEEN EDITED \n
  PROFILING DATA WAS CREATED WITH DIFFERENT VERSION OF LPROF/XPROF\n
 CNTFILE MACHINE TYPE DOES NOT MATCH THIS MACHINE\n
\tDATA MAY BE UNINTELLIGIBLE, ERRORS ARE LIKELY\n
  CNTFILE IS INCOMPLETE, POSSIBLY BAD DATA \n
  OBJECT FILE'S TIME STAMP IS DIFFERENT THAN IT WAS WHEN PROFILING\n
\tDATA WAS RECORDED. IF FILE HAS BEEN CHANGED, ERRORS ARE LIKELY\n
***coverage data for function '%s',object file '%s',\n
\tnot found in covfile '%s'***\n
function '%s' not found\n
dynamic structure allocation failed
covfile objectfile entry read failed

new covfile write failed
_CAcomp_covf: covfile header write failed\n
covfile header read failed
_CAobj_entry: covfile object file table full\n
_CAobj_entry: unable to open object file\n
Failure returned by _CAhead_compare.
Invalid code returned by CAobj_match.
Invalid code returned by _CAobj_compare.
Bad code returned by CAor.

Bad code returned by CAadd_flist.

Bad value returned by _CAcomp_covf.

Bad code returned by _CAfree_list.
Bad value returned by CAobj_match/_CAobj_compare.
_CAcov_join: %s\n
'%s'\n
   Target %s is the same as a source %s.\n
   No merge performed.\n
   Unable to find %s\n
'%s', '%s'\n
   Bad %s entry.\n
   Header failure.\n
   COMP Flag fail; no override\n
   COMP Flag fail; override specified\n
   Unable to access object file data.\n
   Object file entry time stamps don't match.\n
   Override assumed.\n
   No override specified.\n
   Object file entry names & timestamps don't match.\n
   Object file names don't match,time stamps do.\n
   Unable to create COVFILE\n
   FATAL Error\n
   Unexpected EOF encountered.\n
   No merge performed for this object file.\n
   Incomplete %s entry, override assumed.\n
   Function not found in object file: '%s'\n
   Unable to merge data.\n
   Data copied from '%s'\n
   Unable to create new object file entry.\n
   Unable to create new function entry.\n
libprof: %s: Warning - internal conversion of COFF file to ELF\n
unrecognized PROFOPTS option: %s\n



_CAobj_entry: %s\n
_CAcreate_covf: %s\n
_CAcomp_covf: %s\n
_CAdata_entry: %s\n
Cannot find base address for %s.
***unable to write profiling data\n
Cannot find link map.
Cannot find linkmap entry shared object.
Unable to create temp name.
Unable to locate file %s in debug information.\n
File name %s was used more than once.
Unable to locate line information for function %s.
Invalid FORM_value %#x for attribute type %#x\n
Cannot find match name.
Location of file for this process unknown.
%s %s in %s.
name of executable is null\n
%s %s.
Elf library out of date
%s %d in %s.
calloc: Out of space
realloc: Out of space
 Profiled object file names are different, but time stamps match.\n
\tAssuming correct object file.***\n
_symintOpen on failed for '%s'\n
*** Unable to create a file to store profiling data.\n
CNTFILE `%s' updated\n
*** Unable to merge results.\n
CNTFILE `%s' created\n
*** Unable to put profiling data in `%s'.\n
*** No profiling data retrievable from process `%s'\n
_CApfind: out of memory\n
Data from this execution can be retrieved from `%s'.\n
Dumping profiling data from process '%s' . . .\n
%s: %s\n
unknown option \"%c\"\n
invalid opn field for %s\n
out of space\n
too many filenames\n
no argument for -i option\n
no argument for -o option\n
can't open %s\n
label of nonexistent block requested\n
unknown optimization for ebboptim\n
MARC: jump is %d\n
can't get file descriptor\n
can't open file %s\n
in-line (-y) option missing\n
invalid in-line (-y) option\n
Bad input format\n
parse_com: unbalanced asm.\n
parse_regal: missing weight field\n
parse_regal:  illegal #REGAL type:\n\t%s\n
parse_regal:  illegal name in #REGAL\n
parse_regal: missing length\n
parse_regal:  trouble installing a regal\n
parse_alias: missing length\n
parse_pseudo(): unrecognized .size directive\n
cant eliminate frame pointer.\n
parse_section(): no section name\n
plookup(): illegal pseudo_op: %s\n
-%c suboption missing\n
-K suboption invalid\n
-Q suboption invalid\n
-X requires 't', 'a', or 'c'\n
-_ requires 'r' or 'e' or 's'\n
-386 suboption invalid\n
-486 suboption invalid\n
-586 suboption invalid\n

cant find numauto\n
process_push_pop(): improper push pop\n
getstmnt: out of buffer space\n
ExtendCopyBuf: new size <= old size\n
ExtendCopyBuf: out of space\n

lookup_regal: installation failed - %s\n
cannot create regals list\n
remove_aliases: lengths not equal\n
cannot create labels list\n
rald: fell off end of function\n
raparam: can't find user register restores\n
Empty candidate list\n
got a negative esp offset\n

no reg to get\n
no reg to free\n
Unexpected op length\n
set fp stack internal error \n
sched: get_reg with %s and not reg\n
reg %d not found in stack\n
Optimizer: 
%d branch(es) added to function %d\n
%d of %d total instructions discarded\n
%ld bytes used, %ld allocated\n%d function(s), %d optim(s)\n
case\tnumber\n
%2d\t%3d\n
%d unreachable instruction(s) deleted\n
%d branch(es) saved\n
%d instruction(s) merged\n
%d loop(s) rotated\n
 %s%s\n

optimizer error: 
lost temp file\n
optimizer error: asm temp file lost\n
CASE DOES HAPPEN\n
loops inside this loop: %d\n
______________________dependents_______________\n
parents: %d  
_________________anti_dependents_______________\n

__________________agi_dependents_______________\n
__________________may_dependents_______________\n
/%s 
NUL
: %s
: %s\n
 <errno=%d>\n
:
gen_seg_override():no segment
WARNING: No matching source line.\n
%s %s, now %s
float
double
-unknown-
%s relocatable
%s based on defined name
%s based on undefined name
none
object
function
num_init():bad numeric package parameters
num_init():pow 10 table too short
highbitno():nonzero but no bit set: %lu
num_snarrow():bad number of bits: %u
num_unarrow():bad number of bits: %u
num_fromslong():cannot allocate number
baddig():bad base: %d
num_fromstr():cannot allocate number
num_fromstr():cannot allocate string
invalid white space character in directive
directive within macro argument list might not be portable
interpreted as a #line directive
invalid directive
invalid compiler control line in \".i\" file
directive is an upward-compatible ANSI C extension
read error: "), "
null character in input
trigraph sequence replaced
newline not last character in file
EOF in argument list of macro
invalid use of \"defined\" operator
stdout I/O error
usage: [-BCEHPV] [-Aname[(value)] ...] [-Dname[=value] ...] [-Uname ...] [-Idir ...] [-X[tac]] [-Ydirectory] [input [output]]"
too many errors
both the -Bhide and -Bexport flags cannot contain lists of symbols
the -Bhide and -Bexport flags are incompatible
the -dn and -Bexport flags are incompatible
the -dn and -Bhide flags are in compatible
illegal form for -Bexport option
illegal form for -Bhide option
\t[-B export global symbols are made visible\n\t\t outside of the executable]\n
\t[-B hide global symbols are not made visible\n\t\t outside of the shared object]\n
cannot export symbol `%s`; not a global symbol
cannot hide symbol `%s`; an undefined global symbol
cannot hide symbol `%s`; must be a defined global or weak symbol
cannot export symbol `%s`; must be a global or weak symbol
the -dn and -Bbind_now flags are incompatible
illegal relocation type %d in section %s of file %s
failed to close shared object
Cannot hide symbol\n
%s\n
hidden symbols require a global or weak definition
Cannot export symbol\n
exported symbols must be globals or weaks

-A not available in C++ mode, ignored\n
Usage: CC [ -%s ] files ...\n

File name part of %s is empty\n
Pre-linker failed\n
cannot access file %s\n

cannot read file %s\n
cannot open file for writing: %s\n
cannot write file %s\n




unable to strip executable %s\n

cannot redirect file descriptor %d\n

\t[-f]: prepare code for Standard Components fs tool.\n
basic block profiling and inlining mutually exclusive; inlining disabled\n
Option -T requires an argument\n
Illegal argument to -T flag, '-T %s'\n
\t[-K [c++_inline|no_inline|inline]]: controls the degree of\n
\t\tfunction inlining.\n
\t[-T [none|local|used|all]]: control template instantiations.\n
\t[-T auto]: turn on automatic template instantiations.\n
\t[-w]: cause the compiler to suppress warning messages.\n
-v and -w options mutually exclusive; -w disabled\n
debugging and inlining mutually exclusive; inlining disabled\n
Ignoring malformed #pragma section_map
ignoring malformed #pragma %s
exceeded inline function limit of %d or node limit %d
\tfull benefits of inlining will not be realized
cannot inline function %s with a variable argument list
cannot inline function %s which returns a struct, union or class
cannot inline function %s which has a struct, union or class formal parameter
cannot inline function %s which has a local static variable
cannot inline function %s
recursion encountered; cannot inline function %s
cannot inline function %s inside loop initialization
cannot inline function %s as an operand of a colon operator
cannot inline function %s as the right operand of a &&, || or comma expression
cannot inline function %s - number of arguments mismatch
cannot inline function %s - argument type mismatch
-Kminabi will be removed in the next release
Only linker input specified, but options suppress linker\n
%s: library name too long
%s%s: library pathname too long
library %s, which is NEEDED by %s, is not found
can\'t take address of object of type void
using out of scope dimension: %s
