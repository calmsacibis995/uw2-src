#ident	"@(#)cmd-nm:common/cmd/cmd-nm/usr.sbin/snmp/in.snmpd/nmsnmpd.str	1.1"
%s [-v]\n
The optional -v argument enables verbose debug output.\n
SMUX open request received.\n
New SMUX end-point opened.\n
Checking other SMUX connections nfds(%d).\n
Other SMUX requests being received fd(%d).\n
Add snmp 161/udp to /etc/inet/services.\n
t_open of %s failed: %s.\n
t_alloc for t_bind request failed: %s.\n
t_alloc for t_bind response failed: %s.\n
t_bind failed: %s.\n
Couldn't bind to the requested address.\n
snmpd server initialized.\n
t_rcvudata failed: %s.\n
process_link_trap: getmsg: %m.\n
\nINCOMING PACKET : %s.\n
in_packet_len = %d.\n
%s: Error parsing packet.\n
Authentication failure from: %s.\n
%s: Error parsing pdu packlet.\n
\nTHE VARIABLES IN REQUEST:\n
make_response_pdu failed.\n
build_pdu failed.\n
\nTHE VARIABLES IN RESPONSE:\n
make_octetstring failed.\n
make_authentication failed.\n
build_authentication failed.\n
\nOUTGOING PACKET:\n
out_packet_len = %d.\n
Open of %s failed: %m.\n
icmp: ioctl SIOCSMGMT failed: %m.\n
ip: ioctl SIOCSIPTRAP failed: %m.\n
tcp: ioctl SIOCSMGMT failed: %m.\n
udp: ioctl SIOCSMGMT failed: %m.\n
init_globals: %s: No namelist\n
init_globals: Cannot open kmem: %m.\n
init_communities: Error opening /etc/netmgt/snmpd.comm: %m.\n
init_communities: Config error with: %s.\n
init_communities: Bad privileges type with: %s.\n
init_communities: Bad IP address with: %s.\n
init_trap_communities: Error opening /etc/netmgt/snmpd.trap: %m.\n
init_trap_communities:  Config error with: %s.\n
init_trap_communities: Bad IP address with: %s.\n
init_trap_communities:  Bad port number: %s.\n
Error opening /etc/netmgt/snmpd.conf: %m.\n
System Description = %s.\n
System Object Identifier = %s.\n
Forwarding = 
TRUE (gateway).\n
FALSE (host).\n
%s: Host unknown.\n
t_sndudata (trap_fd) failed: %s.\n
System error %d.\n
TLI error %d.\n
Add snmp 36879/ipx to /etc/inet/services.\n
t_bind failed for IPX endpoint: %s.\n
IPX: SNMP t_bind returned socket 0x%0.2x%0.2x.\n
IPX endpoint initialized fd(%d).\n
IPX: SNMP-TRAP t_bind returned socket 0x%0.2x%0.2x.\n
IPX trap endpoint initialized fd(%d).\n
IPX process entered.\n
t_rcvudata failed on IPX endpoint: %s.\n
IPX process packet received.\n
packet_len = %d.\n
packet_type = %d.\n
Error parsing packet in authentication.\n
Version mismatch.\n
Authentication error.\n
OUTGOING PACKET TO IPX ENDPOINT:\n
spacket_len = %d.\n
t_sndudata (ipx_trap_fd) failed: %s.\n
net[%0.2x %0.2x %0.2x %0.2x]\n
node[%0.2x %0.2x %0.2x %0.2x %0.2x %0.2x]\n
sock[%0.2x %0.2x]\n
t_sndudata (trap_fd) failed: %s.\n
SMUX: t_open %s failed: %s.\n
SMUX: t_bind failed: %s.\n
SMUX: t_alloc failed: %s.\n
t_listen failed: %s.\n
t_rcvdis failed: %s.\n
t_accept failed: %s.\n
recv_tcp_packet: Unexpected TLI event %d received.\n
recv_tcp_packet: Peer closed connection.\n
recv_tcp_packet: t_rcv failed: %s.\n
send_tcp_packet: t_snd failed: %s.\n
recv_tcp_packet failed.\n
Fetching packet %4d bytes long.\n
Parsed length %d.\n
recv_tcp_packet failed.\n
Timed out waiting for data from SMUX peer.\n
Not enough memory.\n
gt_nxt_cls: Variable is with a peer.\n
Variable is: %s.\n
gt_nxt_cls: get-next got bumped.\n
add_var: malloc failed: %m
No distant parent for %s.\n
Bad type (%d) for pdu in make_response_pdu().\n
VAR requested: %s.\n
Out of memory: %d needed.\n
Couldn't bind to the requested address.\n
Could not find the SMUX peer block.\n
End-point descriptor is %d.\n
SMUX PACKET received: 
packet length = %d.\n
SMUX process failed.\n
Bad version of SMUX protocol (%d).\n
Identity is %s.\n
Bad password.\n
Bad identity.\n
Reserved subtree cannot be registered.\n
Subtree is %s.\n
Operation is %d.\n
Sub-tree not registered.\n
No such registration.\n
Bad sub-tree.\n
Requested priority %d.\n
Tree priority now %d.\n
Existing priority: %d.\n
SMUX PACKET being sent: 
Error sending an SMUX pdu.\n
Dispatched the register-response!!!\n
Error encoding the SMUX pdu.\n
Unexpected operation (%d).\n
Bad operation (%d).\n
Error dispatching the SMUX pdu.\n
The reply is of type %x.\n
VAR in the received SMUX packet after copying: \n
Error fetching an SMUX pdu.\n
get_arp_entry: Open of %s failed: %m.\n
get_arp_entry: STIOCGARPTAB: %m.\n
get_arp_entry: Malloc failed: %m.\n
arptabaddr: Symbol not in namelist.\n
snmpd: arptabsizeaddr: Symbol not in namelist.\n
get_arp_entry, arptabsize: %m.\n
get_arp_entry, arptab: %m.\n
get_icmp_stat: Open of %s failed: %m.\n
icmp: ioctl SIOCSMGMT failed: %m.\n
get_icmp_stat: ioctl: SIOCGICMPSTATS: %m.\n
icmpstataddr: Symbol not defined.\n
get_icmp_stat: %m.\n
var_ip_stat_get: ipforwarding: Symbol not defined.\n
var_ip_stat_get: ipforwarding: %m.\n
var_ip_stat_get: ip_ttl: Symbol not defined.\n
var_ip_stat_get: ip_ttl: %m.\n
var_ip_stat_get: ipq_ttl: Symbol not defined.\n
var_ip_stat_get: ipq_ttl: %m.\n
var_ip_reasm_reqds_get: ipq: Symbol not defined.\n
var_ip_reasm_reqds_get: ipq1: %m.\n
var_ip_reasm_reqds_get: ipq2: %m.\n
var_ip_reasm_reqds_get: ipasfrag: %m.\n
var_ip_stat_get: SIOCSIPTRAP: %m.\n
get_ip_stat: ioctl: SIOCGIPSTUFF: %m.\n
ipstataddr: Symbol not defined.\n
get_ip_stat: %m.\n
ifnet: Symbol not defined.\n
get_ip_addr, ifnetaddr: %m.\n
get_ip_addr, temp_ifaddr_entry: %m.\n
get_ip_addr, temp_ifnet_entry.if_name: %m.\n
get_ip_addr: provider: Symbol not defined.\n
get_ip_addr: lastprov: Symbol not defined.\n
get_ip_addr: lastprov: %m.\n
get_ip_addr, temp_prov_entry: %m.\n
var_ip_stat_test: ipforwarding: Symbol not defined.\n
var_ip_stat_test: ip_ttl: Symbol not defined.\n
var_ip_stat_set: Open of %s failed: %m.\n
var_ip_stat_set: SIOCSIPTRAP: %m.\n
get_ip_stat: Open of %s failed: %m.\n
ifstats read: %m.\n
SIOCGIFFLAGS: %m.\n
SIOCSIFFLAGS: %m.\n
var_if_up_time_get: too many interfaces -- recompile with a large number for MAXINTERFACES.\n
var_if_outqlen_get, queue: %m.\n
var_if_outqlen_get, mb: %m.\n
ifnet: Symbol not defined.\n
get_if_entry, ifnetaddr: %m.\n
get_if_entry, ifnet_entry_->if_name: %m.\n
get_if_entry, ifaddr_entry: %m.\n
get_ip_entry: provider: Symbol not defined.\n
get_ip_entry: lastprov: Symbol not defined.\n
get_ip_entry: lastprov: %m.\n
get_ip_entry: provaddr: %m.\n
get_route_entry: if_num: %m.\n
get_route_entry: Open of %s failed: %m.\n
get_route_entry: RTSTR_GETROUTE: %m.\n
get_route_entry: malloc: %m.\n
rthost: Symbol not in namelist.\n
rtnet: Symbol not in namelist.\n
rthashsize: Symbol not in namelist.\n
get_route_entry: malloc failed: %m.\n
ifnet: Symbol not defined.\n
get_if_number_for_route: ifnetaddr: %m.\n
get_if_number_for_route: ifnet_entry: %m.\n
get_if_number_for_route: ifaddr_entry: %m.\n
get_if_number_for_route: provider: Symbol not defined.\n
get_if_number_for_route: lastprov: Symbol not defined.\n
get_if_number_for_route: Open of %s failed: %m.\n
get_if_number_for_route: SIOCSIPTRAP: %m.\n
get_if_number_for_route: SIOCGIFALL: %m.\n
rtsettable: Socket open failed: %m.\n
rtsettable: Open failed: %m.\n
rtsettable: %m.\n
SICGIFCONF failed: %m.\n
SICGIFNETMASK failed: %m.\n
get_tcp_conn: Open of %s failed: %m.\n
get_tcp_conn: ioctl SIOCSMGMT failed: %m.\n
get_tcp_conn: STIOCGTCB: %m.\n
get_tcp_conn: malloc: %m.\n
tcbaddr: Symbol not defined.\n
get_tcp_conn: %m.\n
count_curr_tcp_conn_estab: %m.\n
get_udp_table: Open of %s failed: %m.\n
get_udp_table: SIOCSMGMT: %m.\n
get_udp_table: STIOCGUDB: %m.\n
get_udp_table: malloc: %m.\n
ucbaddr: Symbol not defined.\n
get_udp_conn: %m.\n
tcp_minrexmttimeout: Symbol not defined.\n
tcp_minrexmttimeout: %m.\n
tcp_maxrexmttimeout: Symbol not defined.\n
tcp_maxrexmttimeout: %m.\n
ntcp: Symbol not defined.\n
ntcp: %m.\n
get_tcp_stat: open of %s failed: %m.\n
get_tcp_stat: ioctl SIOCSMGMT failed: %m.\n
get_tcp_stat: ioctl: SIOCGTCPSTUFF: %m.\n
tcpstataddr: Symbol not defined.\n
get_tcp_stat: %m.\n
get_udp_stat: Open of %s failed: %m.\n
get_udp_stat: SIOCSMGMT: %m.\n
get_udp_stat: ioctl: SIOCGUDPSTATS: %m.\n
udpstataddr: Symbol not defined.\n
get_udp_stat: %m.\n
get_if_number_for_route: lastprov: %m.\n
