#ident	"@(#)oamintf:common/cmd/oamintf/security/audit/auditing/criteria/set/user/Form.useraud	1.1.5.2"
#ident  "$Header: Form.useraud 2.0 91/07/12 $"
#	Module Name: Form.useraud
form="Set User Level Audit Criteria"

framemsg=`readfile $INTFBASE/form.msg`
help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO

close=`rm -f $USERAUDERR /tmp/$VPID.events /tmp/$VPID.tmpev /tmp/$VPID.logs /tmp/$VPID.vlogs`

done=`set -l USERAUDERR=/tmp/$VPID.userauderr;
	getfrm |set -l FRAMEID;
	unset -l UAUDARGS;

	if [ "$F1" = "all" ];
	then 
		set -l UAUDARGS="-a";
	else 	
		set -l UAUDARGS="-u $USERS"; 
	fi;

	if [ -n "$OP" ]; 
	then
		set -l UAUDARGS="$UAUDARGS -e$OP$EVENTS";
	else
		set -l UAUDARGS="$UAUDARGS -e$EVENTS"; 
	fi;

	message -f "Setting user level audit criteria.";
	shell "$TFADMIN auditset  $!UAUDARGS" >/dev/null 2>$USERAUDERR;

	if [ $RET -ne 0 ]; 
	then
		set -l CMD="OPEN TEXT $OBJ_DIR/Text.usernok";
	elif test -s "$USERAUDERR"; 
	then
		set -l CMD="OPEN TEXT $OBJ_DIR/Text.userwok";
	else
		set -l CMD="OPEN TEXT $OBJ_DIR/Text.userok";
	fi`$CMD

# get login info (LOGNAME or UID)
`echo "all" > /tmp/$VPID.vlogs;
 ps -ef | sed '1D' | sed 's/^ *//' | sed 's/ .*$//' | 
 	sort -u > /tmp/$VPID.logs;
 fgrep -f /tmp/$VPID.logs /etc/passwd|fmlcut -d: -f1 >> /tmp/$VPID.vlogs;
 fgrep -f /tmp/$VPID.logs /etc/passwd|fmlcut -d: -f3 >> /tmp/$VPID.vlogs;`

# get event info (TYPES and CLASSES)
`valevt pre | sed '/^$/d' > /tmp/$VPID.tmpev;
 sed '/^[ 	].*$/d;/^$/d;s/alias //;s/ .*$//' 
	/etc/security/audit/classes >> /tmp/$VPID.tmpev;
 sort -u /tmp/$VPID.tmpev > /tmp/$VPID.events;`

#F1
name=User(s):
lininfo=Form.useraud:users
nrow=1
ncol=3
frow=1
fcol=12
rows=1
columns=27
scroll=TRUE
rmenu=OPEN MENU $OBJ_DIR/Menu.logins
valid=`message -f "Please Wait."; 
	if [ -n "$F1" ]; 
	then
	 	echo "$F1" |set -l USERS;
	  	if regex -v "$F1" '.*,.*'; 
		then
	   		echo "$F1" |sed 's/,/ /g' | set -l GF1;
	       		valforloop "$GF1" "grep \$i /tmp/$VPID.vlogs";
	   	else 
			fmlgrep "$F1" /tmp/$VPID.vlogs;
	   	fi;
	fi`

invalidmsg= const "Error - Enter all, or one or more valid uids or user logins."
fieldmsg= const "Press the CHOICES function key. Press SAVE when you complete the form."

#F2
name=Operation on events:
lininfo=Form.useraud:operation
nrow=2
ncol=3
frow=2
fcol=24
rows=1
columns=15
value=replacement
rmenu={ addition deletion replacement exception }
valid=`if [ "$F2" = "addition" ]; then set -l OP="+";
	elif [ "$F2" = "deletion" ]; then set -l OP="-";
	elif [ "$F2" = "exception" ]; then set -l OP="!";
	elif [ "$F2" = "replacement" ]; then unset -l OP;
	else echo FALSE;
	fi`
invalidmsg= const "Error - Must enter addition, deletion, replacement, or exception."
fieldmsg= const "Press the CHOICES function key. Press SAVE when you complete the form."

#F3
name=Event type(s) or class(es):
lininfo=Form.useraud:event
nrow=3
ncol=3
frow=3
fcol=31
rows=1
columns=35
scroll=TRUE
rmenu=OPEN MENU $OBJ_DIR/Menu.events
valid=`message -f "Please Wait.";
	if [ -n "$F3" ]; 
	then
	   	echo "$F3" | set -l EVENTS;
	   	if regex -v "$F3" '.*,.*';
		then
			echo "$F3" | sed 's/,/ /g' | set -l GF3;
	   		valforloop "$GF3" "grep \$i /tmp/$VPID.events";
	   	else
			fmlgrep "$F3" /tmp/$VPID.events;
		fi;
	else echo FALSE;
	fi`
invalidmsg=const "Error - Must enter one or more valid event types or classes."
fieldmsg= const "Press the CHOICES function key. Press SAVE when you complete the form."
