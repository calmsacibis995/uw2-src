#ident	"@(#)oamintf:common/cmd/oamintf/edsysadm/Form.menu	1.12.9.8"
#ident  "$Header: Form.menu 2.0 91/07/12 $"

################################################################################
#	Module Name: Form.menu
#	Date: July 1988
#
#	ARGS PASSED IN:
#			ARG1 -> addmenu/chgmenu flag
#			ARG2 -> package description file name
#
#	ARGS PASSED OUT:
#			ARG1 -> addmenu/chgmenu flag
#			ARG2 -> package description file name
#			F1 -> Menu name
#			F2 -> Menu description
#			F3 -> Menu location
#			F4 -> Menu help
#			"" -> placeholder
#			"" -> placeholder
#			LOC:NAME -> original location
################################################################################
form="Define a Menu"

framemsg=`readfile $INTFBASE/form.msg`

help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO

close=`rm -f $GETINFO ${TESTBASE}/col`

lifetime=permanent

done=`unset -l CMD;
	set -l NULLF="";
	if [ "$NAME" != "" -a "$NAME" != "$F1" ];
	then
	  if [ "$F2" != "$DESC" -o "$F3" != "$LOC" -o "$F4" != "$HELP" ];
	  then
	     set -l CMD="OPEN TEXT $EDSYSADM/Text.noname";
	  else
	     echo $F3 | sed -e "s/main/\/usr\/sadm\/sysadm\/menu/" -e "s/:/\//g" | set -l TASKDIR;
	     set -l NTASKDIR=$TASKDIR/$F1;
	     set -l NMENU="$NTASKDIR/$F1.menu";
	     set -l OTASKDIR=$TASKDIR/$NAME;
	     set -l OMENU="$OTASKDIR/$NAME.menu";
	     set -l FRMNAME=$EDSYSADM/Form.menu;
	     if [ ! -d $NTASKDIR ];
	     then
	   	echo "$NAME $F1 $OTASKDIR $NTASKDIR" >${TESTBASE}/nms;
	   	set -l CMD="OPEN FORM $EDSYSADM/Form.rename $NAME $F1 $OTASKDIR $NTASKDIR $FRMNAME";
	     else
		set -l CMD="OPEN TEXT $EDSYSADM/Text.direxist $NAME $F1 $NTASKDIR";
	     fi;
	  fi;
	else
	  echo "${F2}" | tr ' ' '\005' | set -l DESCR;
	  set -l CMD="OPEN FORM $EDSYSADM/Form.test \"$ARG1\" \"$ARG2\" \"$F1\" \"$DESCR\" \"$F3\" \"$F4\" \"$NULLF\" \"$NULLF\" \"$LOC:$F1\"";
	fi`$CMD

# F1
name=Name:
lininfo=mname
nrow=1
ncol=1
frow=1
fcol=7
rows=1
columns=16
`getfld "$GETINFO" NAME | set -l NAME`
value=$NAME

valid=`regex -e -v "$F1" '^[\_a-z]{1,16}$'`

choicemsg="For Menu Name use 16 or less lower case and underbar characters."
invalidmsg="Error: Menu Name must be lower case and underbar characters only."

# F2
name=Description:
lininfo=descrp
nrow=2
ncol=1
frow=2
fcol=14
rows=1
columns=58
`getfld "$GETINFO" DESC | set -l DESC`
value=$DESC

# Validates for characters 
valid=`regex -v "$F2" '^[A-Za-z][^\@\^\~\`\'\"]*$'`
#valid=`regex -v "$F2" '^[A-Z][\_\ A-Za-z0-9]+$'`

choicemsg="Menu Description may be 58 characters or less."
invalidmsg="Don't use special characters."

# F3
name=Location:
lininfo=loc
nrow=3
ncol=1
frow=3
fcol=11
rows=1
columns=61
scroll=true
`getfld "$GETINFO" LOC | set -l LOC`
value=$LOC

valid=`rm -fr ${TESTBASE}/loc;
       regex -v "$F3" '^[m][a][i][n][\:][\_A-Za-z0-9][\_\:A-Za-z0-9]*[\_A-Za-z0-9]$' 'true' '^main$' 'true' &&
       shell "echo \"$F3\" | awk  '/::/ { exit 1 }' >/dev/null"`
   
 
choicemsg="Start with 'main' and separate menu location levels with ':'."
invalidmsg=`echo "Start with 'main', use letters, numbers, & underbars. Separate
levels with ':'."`


# F4
name=Help message:
lininfo=help
nrow=4
ncol=1
frow=4
fcol=15
rows=1
columns=58
scroll=true
`getfld "$GETINFO" HELP | sed 's/^[^/]/~\/&/'`
value=$HELP

# if value (F4) is "", edhelp will do "ed Help",
# hence the "||" in the "if" clause
# F4 is passed to "mkchgs" to inorder to copy $HELP to the
# help file at the installed location, hence the "if [ -z $F4 ].."
valid=`abspath $LOC $NAME $F4 | set -l F4;
        valpath -n $F4;
       if [ $RET -eq 0 ] || [ $F4 = "Help" ];
       then
	   run edhelp $F4;
	   echo $F4 | sed -e 's/ *//' | set -l F4;
           if [ -z $F4 ];
           then
                set -l F4="Help";
           fi;
       else
	   echo true;
       fi`
	
invalidmsg="Error: must contain the name of a file using standard filename characters."
choicemsg="Use absolute or relative path name and standard filename characters."

name=RESET
button=8
action=reset
