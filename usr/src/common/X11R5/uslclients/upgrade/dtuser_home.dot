#
#ident	"@(#)dtupgrade:dtuser_home.dot	1.4"
#
# dtuser_home.dot - upgrade the following files in the home directory
#	based on $DtUsers, note that DtUsers was generated by dtday1_view.dot.
#
#	.lastsession	simply remove it.
#	.dtfclass	save the old copy and
#			upgrade `CLASS DATA' (dtfclass_scan.awk).
#	.olinitrc	save the old copy and override with the new one.
#	.Xdefaults	save the old copy and,
#			remove obsoleted resources (dtobso_rscs.dat),
#			append with /usr/X/adm/.Xdefaults (CDE resources).
#	.olsetup	save the old copy and override with the new one,
#			preserve the following user customized fields:
#				DT, XNETACCESS
#
#	.dthelp		remove all .bookmark file(s) under it and then
#			create a `notes' file in $saved-dir/dthelp/locale/.
#			This means each locale will have a `notes' file
#			that contains all of the notes from
#			$dthome/.dthelp/.locale/.topic/.notes/*
#			The format of this `notes' file is:
#				topic
#				notes
#				new-line
#				topic
#				notes
#				new-line
#				...
#	.printer	(if it exists) add execute permission to all files 
#				in this directory so they will correctly class with 
#				the UW2.0 PRINTER class

DtUpgradeStatus=0	# set it to `0' initially

TmpFile=/tmp/$$tmp$$

for dtuser in $DtUsers
do
	FindUserHome $dtuser	# output is in $dthome

		# shouldn't check, but do it just in case!!!
	if [ $DtUpgradeStatus -ne 0 ]
	then
		continue
	fi

	# if I'm here, this user is not upgraded yet because
	# dtday1_view.dot checked already!!!

	EchoThis "  dtuser_home: updating $dthome for $dtuser" HDR

	EchoThis "    dtuser_home: working on .lastsession..." HDR
	RemoveThisFile $dthome/.lastsession

		# should be there, but just in case...
	if [ -f $dthome/.dtfclass ]
	then
EchoThis "    dtuser_home: working on .dtfclass..." HDR
/usr/bin/awk -f $DtUpgradeBinDir/dtfclass_scan.awk $dthome/.dtfclass >$TmpFile
		if [ $? = 0 ]
		then
			MoveThisFile $dthome/.dtfclass $dthome/$DtSaveName \
								644 $dtuser
			CopyThisFile $TmpFile $dthome/.dtfclass 644 $dtuser
			/usr/bin/rm -f $TmpFile
		else
EchoThis "      dtuser_home: .dtfclass is un-touched because of error" ERR
		fi
	fi

	EchoThis "    dtuser_home: working on .olinitrc..." HDR
	MoveThisFile $dthome/.olinitrc $dthome/$DtSaveName 644 $dtuser
	CopyThisFile $DtAdmDir/.olinitrc $dthome 644 $dtuser

	EchoThis "    dtuser_home: working on .Xdefaults..." HDR
	CopyThisFile $dthome/.Xdefaults $dthome/$DtSaveName 644 $dtuser
	RemoveLinesFromFile $dthome/.Xdefaults $DtUpgradeBinDir/dtobso_rscs.dat
		# include CDE resources
	AppendThisFile $dthome/.Xdefaults $DtAdmDir/.Xdefaults

	EchoThis "    dtuser_home: working on .olsetup..." HDR
		# Users shouldn't modify .olsetup by hand otherwise
		# the update may fail because I'm looking for the
		# exact matches!!!
	KeyDT="^DT="
	OrgDT=`/usr/bin/grep "$KeyDT" $dthome/.olsetup`
	if [ "$?" != 0 ]
	then
		OrgDT=""
	fi

	KeyXNETACCESS="^XNETACCESS="
	OrgXNETACCESS=`/usr/bin/grep "$KeyXNETACCESS" $dthome/.olsetup`
	if [ "$?" != 0 ]
	then
		OrgXNETCCESSA=""
	fi

	MoveThisFile $dthome/.olsetup $dthome/$DtSaveName 644 $dtuser
	CopyThisFile $DtAdmDir/.olsetup $dthome 644 $dtuser

	if [ "$OrgDT" != "" ]
	then
		ReplaceThisLine $dthome/.olsetup $KeyDT $OrgDT
	fi

	if [ "$OrgXNETACCESS" != "" ]
	then
		ReplaceThisLine $dthome/.olsetup $KeyXNETACCESS $OrgXNETACCESS
	fi

	if [ -d $dthome/.dthelp ]
	then
		EchoThis "    dtuser_home: working on .dthelp..." HDR

			# Simply remove all the .bookmark files
			#
			# Can't do it in one shot (i.e., pass it to xargs),
			# because a file name can contain `space', sigh!
		/usr/bin/find $dthome/.dthelp -name ".bookmark"\
					-type f -exec /usr/bin/rm -f {} \;

			# Create notes file in saved directory,
			# this `notes' file contains all of the notes from
			# $dthome/.dthelp/.locale/.topic/.notes!!

		for i in `/usr/bin/ls -a $dthome/.dthelp`
		do
			if [ "$i" = "." -o "$i" = ".." ]
			then
				continue
			fi

			locale_dir=`echo $i | cut -f2 -d"."`
			this_dir=$dthome/$DtSaveName/dthelp/$locale_dir
			MakeThisDir $this_dir 0777 $dtuser

			/usr/bin/find $dthome/.dthelp/$i -name "*.hlp" -print |
			while read this_hlp_note
			do
				/usr/bin/cat "$this_hlp_note" | while read line
				do
				topic=`echo $line | /usr/bin/cut -f2 -d "^"`
				file=`echo $line | /usr/bin/cut -f3 -d "^"`

					echo "$topic" >> $this_dir/notes
					/usr/bin/cat "$file" >> $this_dir/notes
					echo "" >> $this_dir/notes
				done
			done
		done
	fi

	if [ -d $dthome/.printer ]
	then
		EchoThis "    dtuser_home: working on .printer..." HDR
		#
		#	UW2.0 Printer files must be executable
		#
		for i in $dthome/.printer/*
		do
			chmod +x $i 2>/dev/null
		done
	fi
	
done
