#
#ident	"@(#)dtupgrade:dtday1_view.dot	1.10"
#
# dtday1_view.dot - upgrade all desktop users' home directory based
#	on $DtUsers and dtday1_view.dat. $DtDesktopDir upgrade will
#	be done by the desktop package (i.e., removing obsoleted files/dirs).
#
# When return, $DtUsers shall contain a list of desktop users who had
#	the upgrade. User's home directory shall have Day 1
#	in C locale, note that localization will be done in dtlocale.dot,
#	based on the snowbird Day 1 Desktop requirements.
#

DtUpgradeStatus=0	# set it to `0' initially

OrgDtUsers=$DtUsers
DtUsers=""

# Notes -
#
# In dtday1_view.dat, each line shall have two fields, F1 and
# F2 (not in use in some cases).
#
# Valid operations are indicated in F1, they are OP1 - OP9
# F2 explains what will be done when F1 is a valid
# operation type, Otherwise, F1 and F2 are data.
#
# You should reference the doc below for details -
#
#	Requirements for the snowbird Day 1 Desktop,
#		By J.M. Jones (2/7/94)
#
#
if [ "$DtUpgradeStage" = "post" ]		# first time
then
	# Remove /usr/X/lib/classdb/peripherals because it will get
	# regenerated by /etc/dinit.d/S81dtam if /etc/device.tab exists 
	#
	EchoThis "  dtday1_view: checking for /etc/device.tab" HDR
	if [ -f /etc/device.tab ]
	then
		RemoveThisFile $DtClassdbDir/peripherals
	fi
	
	#
	# Copy the system upgrade README file into /usr/X/adm.
	# The file and filename are localized according to
	# the default system locale.
	#	
	set_default=`/usr/bin/defadm locale LANG` 2>/dev/null
	if [ "$?" != 0 ]
	then
		def_locale="C"
	else
		eval $set_default
		def_locale=$LANG
	fi
	readme_name=`LC_ALL=$def_locale /usr/bin/gettxt upgrade:1 "README.UW2.0"`
	if [ -f $DtLocaleDir/$def_locale/README.UW2.0.sys ]
	then
		CopyThisFile $DtLocaleDir/$def_locale/README.UW2.0.sys \
				$DtAdmDir/$readme_name 644 root
	else
		CopyThisFile $DtLocaleDir/C/README.UW2.0.sys \
				$DtAdmDir/$readme_name 644 root
	fi

fi

for dtuser in $OrgDtUsers
do
	FindUserHome $dtuser	# output is in $dthome

	if [ $DtUpgradeStatus -ne 0 ]
	then
		continue
	fi

	IsThisUserUpgraded $dtuser $dthome

	if [ $DtUpgradeStatus -ne 0 ]
	then
		continue
	fi

	EchoThis "  dtday1_view: updating $dthome for $dtuser" HDR

	MakeThisDir $dthome/$DtSaveName 0777 $dtuser

	if [ $DtUpgradeStatus -ne 0 ]
	then
		continue
	fi

	DtUsers="$DtUsers $dtuser"

	while read F1 F2		# See Notes above!
	do
		case $F1 in
			OP1|OP2|OP3|OP4|OP5|OP6|OP7|OP8|OP9|OP10|OP11)
				op_code=$F1;
				continue;;
			*)
				case $op_code in
				OP1)	# F2=MAKE_DIR
					MakeThisDir $dthome/$F1 $F2 $dtuser;
					continue;;
				OP2)	# F2=CREATE_FILE
					CreateThisFile $dthome/$F1 ""\
								$F2 $dtuser;
					continue;;
				OP3)	# F2=DELETE_FILE
					RemoveThisFile $dthome/$F1;
					continue;;
				OP4)	# F2=RELOCATE_DIR_FILE
					# DIR shall appear first in the dat file
					RelocateThisFile $dthome/$F1 \
								$dthome/$F2;
					continue;;
				OP5)	# F2=LINK_FILE_N_SRC_VIA_HOME
					LinkThisFile $dthome/$F1 $dthome/$F2\
								$dtuser;
					continue;;
				OP6)	# F2=LINK_FILE_N_SRC_VIA_SYS
					LinkThisFile $XDir/$F1 $dthome/$F2\
								$dtuser;
					continue;;
				OP7)	# F2=DELETE_DIR
					RemoveThisDir $dthome/$F1;
					continue;;
				OP8)	# F2=RELOCATE_N_THEN_DELETE_DIR
					RemoveThisDir $dthome/$F1 $dthome/$F2;
					continue;;
				OP9)	# F2=DELETE_FILES
					for i in `/usr/bin/ls $dthome/$F1* \
								2>/dev/null`
					do
						RemoveThisFile $i;
					done
					continue;;
				OP10)	# F2=CHG_BACKDROP_ITEMS_LINK
					# OP10 has dependency with OP8!!!
					for i in `/usr/bin/ls $dthome/$F1/* \
								2>/dev/null`
					do
				RemoveThisFile $i;

				this_file=`/usr/bin/basename $i`;
				LinkThisFile $dthome/$F2/$this_file $i $dtuser;
					done
					continue;;
				OP11) # F2=CPIO_DESKTOP_DIRECTORY
					SaveDir=`pwd`
					cd $DtDesktopDir/$F1
					/usr/bin/find * -print | /usr/bin/cpio -pd $dthome/$F1 
					cd $SaveDir
					continue;;
				
				*)
			EchoThis "    dtday1_view: Unknown $op_code" ERR;
					break;;
				esac
		esac
	done < $DtUpgradeBinDir/dtday1_view.dat
done
