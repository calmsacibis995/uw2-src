#
#ident	"@(#)dtupgrade:dtlocale.dot	1.5"
#
# dtlocale.dot - handle any I18N related changes in each user home directory
#	based on $DtUsers, note that $DtUsers was generated by
#	dtday1_view.dot. This includes:
#
#		a. SET LANG environment variable in .login/.profile based
#		   on "^*xnlLanguage:" in .Xdefaults.
#		b. create $DtDayOneDir/$dtuser file.
#		c. switch to the I18N naming of DayOne folders.
#		d. create $dthome/$ThisIdFile, $dthome/$DtSaveName will
#		   be the content.
#
# Note that this is the the last script related to any home directory
#	changes because $dthome/$ThisIdFile will be created here,
#	indicating `upgrades' for $DtUsers is done.
#

DtUpgradeStatus=0		# set it to `0' initially

for dtuser in $DtUsers
do
	FindUserHome $dtuser	# output is in $dthome

		# shouldn't check, but do it just in case!!!
	if [ $DtUpgradeStatus -ne 0 ]
	then
		continue
	fi

	# if I'm here, this user is not upgraded yet because
	# dtday1_view.dot checked already!!!

	EchoThis "  dtlocale: handing I18N changes for $dtuser" HDR

	# mark this is an upgraded user!!!
	CreateThisFile $dthome/$ThisIdFile "$dthome/$DtSaveName" 666 $dtuser


		# initialize `this_locale' based on "xnlLanguage",
	stuff=`/usr/bin/grep "^*xnlLanguage:" $dthome/.Xdefaults`

	if [ $? -ne 0 -o "$stuff" = "" ]
	then
		stuff=`/usr/bin/defadm locale LANG` 2>/dev/null
		if [ "$?" != 0 ]
		then
			this_locale="C"
		else
			eval $stuff
			this_locale=$LANG
		fi
		echo "*xnlLanguage:	$this_locale" >> $dthome/.Xdefaults
	else
			# remove ALL spaces and tabs before filtering
			# probably don't need this step, but...
	stuff=`echo $stuff| /usr/bin/sed -e "s/ [ ]*//g" -e "s/	[	]*//g"`
		this_locale=`echo $stuff | /usr/bin/cut -f2 -d":"`
	fi

		# If dayone catelog file doesn't exist, then we can't
		# I18Nize folder names and can't record DayOneLocale
		# as $this_locale!!!!
	if [ "$this_locale" != "C" -a \
	     -f /usr/lib/locale/$this_locale/LC_MESSAGES/dayone ]
	then
		day1_locale=$this_locale
	else
		day1_locale="C"
	fi

		# pkg.desk should already create it, but just in case...
	if [ ! -d $DtDayOneDir ]
	then
		MakeThisDir $DtDayOneDir 755 bin bin
	fi

	EchoThis "  dtlocale: creating LoginMgr/DayOne/$dtuser" HDR
	$DtDayOnePgm $dtuser $day1_locale

	EchoThis "  dtlocale: working on .login/.profile" HDR

	NewLANG="LANG=$this_locale export LANG	#!@ Do not edit this line !@"

	if [ ! -f $dthome/.profile ]
	then
		CreateThisFile $dthome/.profile "$NewLANG" 644 $dtuser
	else
		CopyThisFile $dthome/.profile $dthome/$DtSaveName 644 $dtuser
			# Can't include `^' because for ksh,
			# it can be `export LANG=?'!!!!!
		KeyLANG="LANG="
		OrgLANG=`/usr/bin/grep "$KeyLANG" $dthome/.profile`
		if [ $? -ne 0 ]
		then
			InsertThisLine $dthome/.profile "$NewLANG"
		else
			ReplaceThisLine $dthome/.profile "$KeyLANG" "$NewLANG"
		fi
	fi

	NewLANG="setenv LANG $this_locale	#!@ Do not edit this line !@"

	if [ ! -f $dthome/.login ]
	then
		CreateThisFile $dthome/.login "$NewLANG" 644 $dtuser
	else
		CopyThisFile $dthome/.login $dthome/$DtSaveName 644 $dtuser
		KeyLANG="^setenv LANG"
		OrgLANG=`/usr/bin/grep "$KeyLANG" $dthome/.login`
		if [ $? -ne 0 ]
		then
			InsertThisLine $dthome/.login "$NewLANG"
		else
			ReplaceThisLine $dthome/.login "$KeyLANG" "$NewLANG"
		fi
	fi

	readme_name=`LC_ALL=$day1_locale /usr/bin/gettxt upgrade:1 "README.UW2.0"`
	CopyThisFile $DtLocaleDir/$day1_locale/README.UW2.0.user \
				$dthome/$readme_name 644 $dtuser

	if [ "$day1_locale" = "C" ]
	then
		continue
	fi

	EchoThis "  dtlocale: switching to I18N naming of DayOne folders" HDR

		# Localize folder names based on $DtDay1Map
	CurrDir=`pwd`
	cd $dthome

		# Steal code from dtadduser!!
	while read Dir File Index
	do
		if [ -s $Dir/$File -o -f $Dir/$File -o -h $Dir/$File ]
		then
	LFile=`LC_ALL=$day1_locale /usr/bin/gettxt dayone:$Index "$File"`
			if [ "$File" != "$LFile" ]
			then
				/usr/bin/mv -f $Dir/$File $Dir/$LFile
			fi
		fi
	done < $DtDay1Map

	cd $CurrDir
done
